//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRIX.Web.Client.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BRIX.Web.Client.Localization.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ability cost.
        /// </summary>
        public static string Abilities_AbilityCost {
            get {
                return ResourceManager.GetString("Abilities_AbilityCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is ability spreads around corners?.
        /// </summary>
        public static string Abilities_AbilitySpreadsAroundCorners {
            get {
                return ResourceManager.GetString("Abilities_AbilitySpreadsAroundCorners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action points.
        /// </summary>
        public static string Abilities_ActionPoints {
            get {
                return ResourceManager.GetString("Abilities_ActionPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Almost any ability is used by spending action points. The more action points an ability spends, the cheaper it will be in experience points..
        /// </summary>
        public static string Abilities_ActionPointsHint {
            get {
                return ResourceManager.GetString("Abilities_ActionPointsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the ability has activation triggers, the character can only actively use the ability for 3 action points..
        /// </summary>
        public static string Abilities_ActionPointsTriggersExplain {
            get {
                return ResourceManager.GetString("Abilities_ActionPointsTriggersExplain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation.
        /// </summary>
        public static string Abilities_Activation {
            get {
                return ResourceManager.GetString("Abilities_Activation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation conditions.
        /// </summary>
        public static string Abilities_ActivationConditionsAspect {
            get {
                return ResourceManager.GetString("Abilities_ActivationConditionsAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation trigger.
        /// </summary>
        public static string Abilities_ActivationTrigger {
            get {
                return ResourceManager.GetString("Abilities_ActivationTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggers.
        /// </summary>
        public static string Abilities_ActivationTriggers {
            get {
                return ResourceManager.GetString("Abilities_ActivationTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area of effect.
        /// </summary>
        public static string Abilities_AOEAspect {
            get {
                return ResourceManager.GetString("Abilities_AOEAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area.
        /// </summary>
        public static string Abilities_Area {
            get {
                return ResourceManager.GetString("Abilities_Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to reset all unsaved changes?.
        /// </summary>
        public static string Abilities_AreYouSureReset {
            get {
                return ResourceManager.GetString("Abilities_AreYouSureReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aspects.
        /// </summary>
        public static string Abilities_Aspects {
            get {
                return ResourceManager.GetString("Abilities_Aspects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max targets count.
        /// </summary>
        public static string Abilities_ChainMaxCountOfTargets {
            get {
                return ResourceManager.GetString("Abilities_ChainMaxCountOfTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max distance between targets.
        /// </summary>
        public static string Abilities_ChainMaxDistanceBetweenTargets {
            get {
                return ResourceManager.GetString("Abilities_ChainMaxDistanceBetweenTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cooldown.
        /// </summary>
        public static string Abilities_Cooldown {
            get {
                return ResourceManager.GetString("Abilities_Cooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify how many uses per day are availiable for ability..
        /// </summary>
        public static string Abilities_CooldownHint {
            get {
                return ResourceManager.GetString("Abilities_CooldownHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance in meters.
        /// </summary>
        public static string Abilities_DistanceInMeters {
            get {
                return ResourceManager.GetString("Abilities_DistanceInMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance to area (D).
        /// </summary>
        public static string Abilities_DistanceToAreaInMeters {
            get {
                return ResourceManager.GetString("Abilities_DistanceToAreaInMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration.
        /// </summary>
        public static string Abilities_DurationAspect {
            get {
                return ResourceManager.GetString("Abilities_DurationAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can specify the number of rounds that the effect will last or repeat..
        /// </summary>
        public static string Abilities_DurationAspect_Hint {
            get {
                return ResourceManager.GetString("Abilities_DurationAspect_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can the character cancel the effect?.
        /// </summary>
        public static string Abilities_DurationAspectCanCancel {
            get {
                return ResourceManager.GetString("Abilities_DurationAspectCanCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an option when a character can cancel a long-term effect that he himself creted without spending action points, but this option increases the cost of the ability..
        /// </summary>
        public static string Abilities_DurationAspectCanCancel_Hint {
            get {
                return ResourceManager.GetString("Abilities_DurationAspectCanCancel_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects.
        /// </summary>
        public static string Abilities_Effects {
            get {
                return ResourceManager.GetString("Abilities_Effects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable cooldown.
        /// </summary>
        public static string Abilities_EnableCooldown {
            get {
                return ResourceManager.GetString("Abilities_EnableCooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of uses per day is limited..
        /// </summary>
        public static string Abilities_EnableCooldownText {
            get {
                return ResourceManager.GetString("Abilities_EnableCooldownText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable target chain?.
        /// </summary>
        public static string Abilities_EnableTargetChain {
            get {
                return ResourceManager.GetString("Abilities_EnableTargetChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter high probability trigger, like «character takes damage»..
        /// </summary>
        public static string Abilities_EnterTriggerHint_High {
            get {
                return ResourceManager.GetString("Abilities_EnterTriggerHint_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter low probability trigger, like «character was attaced by undead»..
        /// </summary>
        public static string Abilities_EnterTriggerHint_Low {
            get {
                return ResourceManager.GetString("Abilities_EnterTriggerHint_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter medium probability trigger, like «character was attaced from range»..
        /// </summary>
        public static string Abilities_EnterTriggerHint_Medium {
            get {
                return ResourceManager.GetString("Abilities_EnterTriggerHint_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excluded targets count.
        /// </summary>
        public static string Abilities_ExcludedTargetsCount {
            get {
                return ResourceManager.GetString("Abilities_ExcludedTargetsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude targets.
        /// </summary>
        public static string Abilities_ExcludeTargets {
            get {
                return ResourceManager.GetString("Abilities_ExcludeTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is possible to fine-tune the area so that certain targets in the area selected by the character will not be affected. The more such targets a character can exclude, the more expensive the ability..
        /// </summary>
        public static string Abilities_ExcludeTargets_Hint {
            get {
                return ResourceManager.GetString("Abilities_ExcludeTargets_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (C).
        /// </summary>
        public static string Abilities_HeightC {
            get {
                return ResourceManager.GetString("Abilities_HeightC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (H).
        /// </summary>
        public static string Abilities_HeightH {
            get {
                return ResourceManager.GetString("Abilities_HeightH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is target selection is random?.
        /// </summary>
        public static string Abilities_IsTargetSelectionIsRandom {
            get {
                return ResourceManager.GetString("Abilities_IsTargetSelectionIsRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are the voxels positioned arbitrary each time?.
        /// </summary>
        public static string Abilities_IsVoxelsArbitrary {
            get {
                return ResourceManager.GetString("Abilities_IsVoxelsArbitrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length (A).
        /// </summary>
        public static string Abilities_LengthA {
            get {
                return ResourceManager.GetString("Abilities_LengthA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already spent:.
        /// </summary>
        public static string Abilities_MonitorAlreadySpent {
            get {
                return ResourceManager.GetString("Abilities_MonitorAlreadySpent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Availiable:.
        /// </summary>
        public static string Abilities_MonitorAvailiable {
            get {
                return ResourceManager.GetString("Abilities_MonitorAvailiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough EXP for ability..
        /// </summary>
        public static string Abilities_NotEnoughExpForAbility {
            get {
                return ResourceManager.GetString("Abilities_NotEnoughExpForAbility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of targets.
        /// </summary>
        public static string Abilities_NumberOfTargets {
            get {
                return ResourceManager.GetString("Abilities_NumberOfTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of voxels (N).
        /// </summary>
        public static string Abilities_NumberOfVoxelsN {
            get {
                return ResourceManager.GetString("Abilities_NumberOfVoxelsN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radius (R).
        /// </summary>
        public static string Abilities_RadiusR {
            get {
                return ResourceManager.GetString("Abilities_RadiusR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random target selection.
        /// </summary>
        public static string Abilities_RandomTargetSelection {
            get {
                return ResourceManager.GetString("Abilities_RandomTargetSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the random target selection mode is selected, then the player, when using the ability, will have to select a random target from those that satisfy the other conditions. This will complicate the planning of actions, but it will make the ability cheaper..
        /// </summary>
        public static string Abilities_RandomTargetSelection_Hint {
            get {
                return ResourceManager.GetString("Abilities_RandomTargetSelection_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rounds count.
        /// </summary>
        public static string Abilities_RoundsCount {
            get {
                return ResourceManager.GetString("Abilities_RoundsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Should the character see the target?.
        /// </summary>
        public static string Abilities_ShouldCharacterSeeTarget {
            get {
                return ResourceManager.GetString("Abilities_ShouldCharacterSeeTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target chain.
        /// </summary>
        public static string Abilities_TargetChain {
            get {
                return ResourceManager.GetString("Abilities_TargetChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets can form chains. This means that once an effect is applied to a target, it can also be applied to the next target at a given distance from the previous one, and so on. The effect can only be applied once to each target within the chain. The distance is indicated in meters. The maximum number of targets in a chain and the distance between targets is limited. The character himself chooses the order of the targets in the chain..
        /// </summary>
        public static string Abilities_TargetChain_Hint {
            get {
                return ResourceManager.GetString("Abilities_TargetChain_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection.
        /// </summary>
        public static string Abilities_TargetSelectionAspect {
            get {
                return ResourceManager.GetString("Abilities_TargetSelectionAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets sizes.
        /// </summary>
        public static string Abilities_TargetSizeAspect {
            get {
                return ResourceManager.GetString("Abilities_TargetSizeAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target visibility.
        /// </summary>
        public static string Abilities_TargetVisibility {
            get {
                return ResourceManager.GetString("Abilities_TargetVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this option is enabled, the effects will be applied only to those targets that the character can see. It is assumed that the viewing angle of the character is 180 degrees. The character can decide which way he is looking just before activating the ability. In chains, it is enough to see the first target..
        /// </summary>
        public static string Abilities_TargetVisibility_Hint {
            get {
                return ResourceManager.GetString("Abilities_TargetVisibility_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger.
        /// </summary>
        public static string Abilities_Trigger {
            get {
                return ResourceManager.GetString("Abilities_Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger probability.
        /// </summary>
        public static string Abilities_TriggerProbability {
            get {
                return ResourceManager.GetString("Abilities_TriggerProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ability can be activated automatically if you add activation triggers. A activation trigger is an event that must occur for an ability to activate without spending action points. With each added trigger the ability will became more expensive..
        /// </summary>
        public static string Abilities_TriggersHint {
            get {
                return ResourceManager.GetString("Abilities_TriggersHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strategy.
        /// </summary>
        public static string Abilities_TSEStrategy {
            get {
                return ResourceManager.GetString("Abilities_TSEStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uses count.
        /// </summary>
        public static string Abilities_UsesCount {
            get {
                return ResourceManager.GetString("Abilities_UsesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vampirism.
        /// </summary>
        public static string Abilities_VampirismAspect {
            get {
                return ResourceManager.GetString("Abilities_VampirismAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A voxel is a 1x1 meter cube. From such voxels, you can make an array — the figure of the area in which the effect will be applied to the targets. In the picture an area of ​​five voxels is composed as an example. The maximum distance between adjacent voxels should not exceed the distance from the character to the area..
        /// </summary>
        public static string Abilities_VoxelArrayHint {
            get {
                return ResourceManager.GetString("Abilities_VoxelArrayHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width (B).
        /// </summary>
        public static string Abilities_WidthB {
            get {
                return ResourceManager.GetString("Abilities_WidthB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change password.
        /// </summary>
        public static string Account_ChangePassword {
            get {
                return ResourceManager.GetString("Account_ChangePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An email has been sent to your email with a link to activate your account. Activate your account by clicking on the link in the email..
        /// </summary>
        public static string Account_ConfirmationEmailWasSent {
            get {
                return ResourceManager.GetString("Account_ConfirmationEmailWasSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account confirmed successfully..
        /// </summary>
        public static string Account_ConfirmedSuccessfully {
            get {
                return ResourceManager.GetString("Account_ConfirmedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something goes wrong when trying to confirm account..
        /// </summary>
        public static string Account_ConfirmFailed {
            get {
                return ResourceManager.GetString("Account_ConfirmFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm password.
        /// </summary>
        public static string Account_ConfirmPassword {
            get {
                return ResourceManager.GetString("Account_ConfirmPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email.
        /// </summary>
        public static string Account_Email {
            get {
                return ResourceManager.GetString("Account_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forgot password?.
        /// </summary>
        public static string Account_ForgotPassword {
            get {
                return ResourceManager.GetString("Account_ForgotPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To restore the password, specify the email address to which an email will be sent with a link to set a new password..
        /// </summary>
        public static string Account_ForgotPasswordHint {
            get {
                return ResourceManager.GetString("Account_ForgotPasswordHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The link for password recovery has been successfully sent to your email..
        /// </summary>
        public static string Account_ForgotPasswordRequestSuccseeded {
            get {
                return ResourceManager.GetString("Account_ForgotPasswordRequestSuccseeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t receive email.
        /// </summary>
        public static string Account_IDidntRecieveEmail {
            get {
                return ResourceManager.GetString("Account_IDidntRecieveEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Account_Password {
            get {
                return ResourceManager.GetString("Account_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password has been successfully changed, you can log in using the new password..
        /// </summary>
        public static string Account_PasswordWasSuccessfullyChanged {
            get {
                return ResourceManager.GetString("Account_PasswordWasSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resend confirmation email.
        /// </summary>
        public static string Account_ResendConfirmationEmail {
            get {
                return ResourceManager.GetString("Account_ResendConfirmationEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the spam folder. Perhaps the email with the link to activate the account is there. If you still can&apos;t find the email, you can request a resend..
        /// </summary>
        public static string Account_ResendConfirmationEmailHint {
            get {
                return ResourceManager.GetString("Account_ResendConfirmationEmailHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email with the account activation link has been successfully sent..
        /// </summary>
        public static string Account_ResendConfirmationSucceeded {
            get {
                return ResourceManager.GetString("Account_ResendConfirmationSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset password.
        /// </summary>
        public static string Account_ResetPassword {
            get {
                return ResourceManager.GetString("Account_ResetPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign-in.
        /// </summary>
        public static string Account_SignIn {
            get {
                return ResourceManager.GetString("Account_SignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign-in.
        /// </summary>
        public static string Account_SignInAction {
            get {
                return ResourceManager.GetString("Account_SignInAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign-up.
        /// </summary>
        public static string Account_SignUp {
            get {
                return ResourceManager.GetString("Account_SignUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign-up.
        /// </summary>
        public static string Account_SignUpAction {
            get {
                return ResourceManager.GetString("Account_SignUpAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You send account verification requests too often, wait a bit before making a new request..
        /// </summary>
        public static string Account_TooOftenResendRequest {
            get {
                return ResourceManager.GetString("Account_TooOftenResendRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can repeat the sending after {0} sec..
        /// </summary>
        public static string Account_YouCanResendAfter {
            get {
                return ResourceManager.GetString("Account_YouCanResendAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string Character {
            get {
                return ResourceManager.GetString("Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string Character_Abilities {
            get {
                return ResourceManager.GetString("Character_Abilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backstory.
        /// </summary>
        public static string Character_Backstory {
            get {
                return ResourceManager.GetString("Character_Backstory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string Character_Details {
            get {
                return ResourceManager.GetString("Character_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory.
        /// </summary>
        public static string Character_Inventory {
            get {
                return ResourceManager.GetString("Character_Inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit character.
        /// </summary>
        public static string Characters_EditCharacter {
            get {
                return ResourceManager.GetString("Characters_EditCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience.
        /// </summary>
        public static string Characters_Experience {
            get {
                return ResourceManager.GetString("Characters_Experience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health.
        /// </summary>
        public static string Characters_Health {
            get {
                return ResourceManager.GetString("Characters_Health", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level.
        /// </summary>
        public static string Characters_Level {
            get {
                return ResourceManager.GetString("Characters_Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Characters_Name {
            get {
                return ResourceManager.GetString("Characters_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string Common_Add {
            get {
                return ResourceManager.GetString("Common_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Characters.
        /// </summary>
        public static string Common_Characters {
            get {
                return ResourceManager.GetString("Common_Characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Characters.
        /// </summary>
        public static string Common_Characters1 {
            get {
                return ResourceManager.GetString("Common_Characters1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Common_Clear {
            get {
                return ResourceManager.GetString("Common_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Common_Description {
            get {
                return ResourceManager.GetString("Common_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Common_Edit {
            get {
                return ResourceManager.GetString("Common_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Common_Language {
            get {
                return ResourceManager.GetString("Common_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading....
        /// </summary>
        public static string Common_LoadingThreeDot {
            get {
                return ResourceManager.GetString("Common_LoadingThreeDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Common_No {
            get {
                return ResourceManager.GetString("Common_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string Common_Ok {
            get {
                return ResourceManager.GetString("Common_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string Common_Open {
            get {
                return ResourceManager.GetString("Common_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Common_Remove {
            get {
                return ResourceManager.GetString("Common_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Common_Reset {
            get {
                return ResourceManager.GetString("Common_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Common_Save {
            get {
                return ResourceManager.GetString("Common_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send.
        /// </summary>
        public static string Common_Send {
            get {
                return ResourceManager.GetString("Common_Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning!.
        /// </summary>
        public static string Common_Warning {
            get {
                return ResourceManager.GetString("Common_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Common_Yes {
            get {
                return ResourceManager.GetString("Common_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        public static string Effect_DamageEffect {
            get {
                return ResourceManager.GetString("Effect_DamageEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each time you use your ability, roll a set of dice, which you specify below, to determine how much damage the ability has done..
        /// </summary>
        public static string Effect_DamageHint {
            get {
                return ResourceManager.GetString("Effect_DamageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All targets in area.
        /// </summary>
        public static string ETargetSelectionStrategy_Area {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to targets located in the specified area. All area parameters are specified in meters. An area can be placed at any angle relative to the character, and the area distance is the distance from the character to the nearest point in that area..
        /// </summary>
        public static string ETargetSelectionStrategy_Area_Hint {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_Area_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character himself.
        /// </summary>
        public static string ETargetSelectionStrategy_CharacterHimself {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_CharacterHimself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target is the character himself..
        /// </summary>
        public static string ETargetSelectionStrategy_CharacterHimself_Hint {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_CharacterHimself_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple targets at distance.
        /// </summary>
        public static string ETargetSelectionStrategy_NTargetsAtDistanсeL {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_NTargetsAtDistanсeL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to a limited number of targets that are no further than the set range. You can not choose same target multiple times..
        /// </summary>
        public static string ETargetSelectionStrategy_NTargetsAtDistanсeL_Hint {
            get {
                return ResourceManager.GetString("ETargetSelectionStrategy_NTargetsAtDistanсeL_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High probability.
        /// </summary>
        public static string ETriggerProbability_High {
            get {
                return ResourceManager.GetString("ETriggerProbability_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low probability.
        /// </summary>
        public static string ETriggerProbability_Low {
            get {
                return ResourceManager.GetString("ETriggerProbability_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium probability.
        /// </summary>
        public static string ETriggerProbability_Medium {
            get {
                return ResourceManager.GetString("ETriggerProbability_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Such email already taken..
        /// </summary>
        public static string Problem_DuplicateUserName {
            get {
                return ResourceManager.GetString("Problem_DuplicateUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong email or password..
        /// </summary>
        public static string Problem_InvalidCredentials {
            get {
                return ResourceManager.GetString("Problem_InvalidCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token..
        /// </summary>
        public static string Problem_InvalidToken {
            get {
                return ResourceManager.GetString("Problem_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one digit (&apos;0&apos;-&apos;9&apos;)..
        /// </summary>
        public static string Problem_PasswordRequiresDigit {
            get {
                return ResourceManager.GetString("Problem_PasswordRequiresDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one lowercase (&apos;a&apos;-&apos;z&apos;)..
        /// </summary>
        public static string Problem_PasswordRequiresLower {
            get {
                return ResourceManager.GetString("Problem_PasswordRequiresLower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one non alphanumeric character..
        /// </summary>
        public static string Problem_PasswordRequiresNonAlphanumeric {
            get {
                return ResourceManager.GetString("Problem_PasswordRequiresNonAlphanumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one uppercase (&apos;A&apos;-&apos;Z&apos;)..
        /// </summary>
        public static string Problem_PasswordRequiresUpper {
            get {
                return ResourceManager.GetString("Problem_PasswordRequiresUpper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error occured..
        /// </summary>
        public static string Problem_UnknownError {
            get {
                return ResourceManager.GetString("Problem_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User not found..
        /// </summary>
        public static string Problem_UserNotFound {
            get {
                return ResourceManager.GetString("Problem_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home.
        /// </summary>
        public static string Tab_Home {
            get {
                return ResourceManager.GetString("Tab_Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email format is invalid..
        /// </summary>
        public static string Validation_EmailFormat {
            get {
                return ResourceManager.GetString("Validation_EmailFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email field is required..
        /// </summary>
        public static string Validation_EmailRequired {
            get {
                return ResourceManager.GetString("Validation_EmailRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password and confirmation password do not match..
        /// </summary>
        public static string Validation_PasswordConfirmCompare {
            get {
                return ResourceManager.GetString("Validation_PasswordConfirmCompare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password must be at least {2} and at max {1} characters long..
        /// </summary>
        public static string Validation_PasswordLength {
            get {
                return ResourceManager.GetString("Validation_PasswordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password field is required..
        /// </summary>
        public static string Validation_PasswordRequired {
            get {
                return ResourceManager.GetString("Validation_PasswordRequired", resourceCulture);
            }
        }
    }
}
