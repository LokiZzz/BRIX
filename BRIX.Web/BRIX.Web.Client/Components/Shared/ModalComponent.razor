@implements IDisposable

<CascadingValue Value="this">

    @ChildContent

    @if(_isBusy)
    {
        <div class="modal is-active">
            <div class="modal-background"></div>
            <div class="modal-content">
                <div class="container p-2">
                    <p class="title block">
                        @Localization[Resource.Common_LoadingThreeDot]
                    </p>
                    <progress class="progress is-primary block" max="100" />
                </div>
            </div>
        </div>
    }

</CascadingValue>

@code {
    private bool _isBusy;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    public void UpdateIsBusy(bool isBusy)
    {
        _isBusy = isBusy;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Modal.OnIsBusyChanged += UpdateIsBusy;
    }

    public void Dispose()
    {
        Modal.OnIsBusyChanged -= UpdateIsBusy;
    }
}
