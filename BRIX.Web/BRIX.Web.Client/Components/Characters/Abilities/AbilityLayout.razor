@using BRIX.Web.Client.Components.Layout

@layout MainLayout
@inherits LayoutComponentBase

<CascadingValue Value="this">
    <div class="section">
        <div class="box">
            <p>Здесь будут хлебные крошки, типа:</p>
            <p>Гоблин боблин -> Способности -> Выстрел из бумпалки -> Урон -> Выбор целей</p>
        </div>

        @Body

        <div class="box">
            <p class="title">@Localization[nameof(Resource.Abilities_AbilityCost)]</p>
            <p>@cost EXP</p>
            @* <p>Уже занято: EXP</p>
            <p>Осталось: EXP</p> *@
            <progress class="progress" value="@cost" max="@overall" />
            <button class="button" @onclick="SaveAsync">@Localization[nameof(Resource.Common_Save)]</button>
        </div>
    </div>
</CascadingValue>

@code {
    private int? cost => Ability?.ExpCost();
    private int? overall => CharacterManager.EditingCharacter?.Experience;

    public Guid CharacterId { get; set; }

    public Character? Character => CharacterManager.EditingCharacter;

    public int? AbilityNumber { get; set; }

    public Ability Ability => AbilityNumber is null ? new()
        : CharacterManager.EditingCharacter?.Abilities.ElementAtOrDefault(AbilityNumber.Value) ?? new();

    /// <summary>
    /// Обновить состояние лейаута.
    /// Не вызывать из OnParametersSet или OnParametersSetAsync, иначе будет stack overflow.
    /// </summary>
    public void Refresh()
    {
        StateHasChanged();
    }

    private async Task SaveAsync(MouseEventArgs e)
    {
        if (CharacterManager.EditingCharacter?.AvailableExp > 0)
        {
            await CharacterManager.SaveAsync();
            Navigation.NavigateTo($"/characters/{CharacterId}/abilities");
        }
        else
        {
            Modal.Alert(new AlertParameters {
                Mode = EAlertMode.Ok,
                Message = Localization[nameof(Resource.Abilities_NotEnoughExpForAbility)],
                Title = Localization[nameof(Resource.Common_Warning)],
            });
        }
    }
}