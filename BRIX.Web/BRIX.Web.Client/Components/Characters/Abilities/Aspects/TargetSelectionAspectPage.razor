@inherits AbilityPageBase

@page "/characters/{CharacterId:guid}/abilities/{AbilityNumber:int}/effects/{EffectType}/{EffectOrderNumber:int}/tse"

@if (aspect is null)
{
    return;
}

<div class="box">
    <p class="title block">@Localization[nameof(Resource.Abilities_Aspect_TargetSelectionAspect)]</p>

    <OptionsTab Mode="EOptionsTabMode.Stack"
                TValue="ETargetSelectionStrategy"
                @bind-SelectedValue="aspect.Strategy" @bind-SelectedValue:after="Layout.Refresh">
        <OptionsTabItem Title="@Localization[nameof(Resource.ETargetSelectionStrategy_NTargetsAtDistanсeL)]"
                        Value="ETargetSelectionStrategy.NTargetsAtDistanсeL" />
        <OptionsTabItem Title="@Localization[nameof(Resource.ETargetSelectionStrategy_Area)]"
                        Value="ETargetSelectionStrategy.Area" />
        <OptionsTabItem Title="@Localization[nameof(Resource.ETargetSelectionStrategy_CharacterHimself)]"
                        Value="ETargetSelectionStrategy.CharacterHimself" />
    </OptionsTab>
</div>

@if (aspect.Strategy == ETargetSelectionStrategy.CharacterHimself)
{
    <div class="box">
        <p class="title block">@Localization[nameof(Resource.ETargetSelectionStrategy_CharacterHimself)]</p>
        <p class="block">@Localization[nameof(Resource.ETargetSelectionStrategy_CharacterHimself_Hint)]</p>
    </div>
}

@if (aspect.Strategy == ETargetSelectionStrategy.NTargetsAtDistanсeL)
{
    <div class="box">
        <p class="title block">

            @Localization[nameof(Resource.ETargetSelectionStrategy_NTargetsAtDistanсeL)]
        </p>
        <p class="block">@Localization[nameof(Resource.ETargetSelectionStrategy_NTargetsAtDistanсeL_Hint)]</p>
        <Field @bind-Value="aspect.NTAD.TargetsCount" @bind-Value:after="Layout.Refresh"
               Label="@Localization[nameof(Resource.Abilities_NumberOfTargets)]" />
        <Field @bind-Value="aspect.NTAD.DistanceInMeters" @bind-Value:after="Layout.Refresh"
               Label="@Localization[nameof(Resource.Abilities_DistanceInMeters)]" />
    </div>

    <div class="box">
        <p class="title block">@Localization[nameof(Resource.Abilities_RandomTargetSelection)]</p>
        <p class="block">@Localization[nameof(Resource.Abilities_RandomTargetSelection_Hint)]</p>
        <Toggle @bind-Value="aspect.NTAD.IsTargetSelectionIsRandom" @bind-Value:after="Layout.Refresh"
                Text="@Localization[nameof(Resource.Abilities_IsTargetSelectionIsRandom)]" />
    </div>
}

@if (aspect.Strategy == ETargetSelectionStrategy.NTargetsAtDistanсeL || aspect.Strategy == ETargetSelectionStrategy.Area)
{
    <div class="box">
        <p class="title block">@Localization[nameof(Resource.Abilities_TargetChain)]</p>
        <p class="block">@Localization[nameof(Resource.Abilities_TargetChain_Hint)]</p>
        <Toggle @bind-Value="aspect.TargetChain.IsChainEnabled" @bind-Value:after="Layout.Refresh"
                Text="@Localization[nameof(Resource.Abilities_EnableTargetChain)]" />

        @if (aspect.TargetChain.IsChainEnabled)
        {
            <Field @bind-Value="aspect.TargetChain.MaxDistanceBetweenTargets" @bind-Value:after="Layout.Refresh"
                   Label="@Localization[nameof(Resource.Abilities_ChainMaxDistanceBetweenTargets)]" />
            <Field @bind-Value="aspect.TargetChain.MaxTargetsCount" @bind-Value:after="Layout.Refresh"
                   Label="@Localization[nameof(Resource.Abilities_ChainMaxCountOfTargets)]" />
        }
    </div>

    <div class="box">
        <p class="title block">@Localization[nameof(Resource.Abilities_TargetVisibility)]</p>
        <p class="block">@Localization[nameof(Resource.Abilities_TargetVisibility_Hint)]</p>
        <Toggle @bind-Value="aspect.NeedToSeeTarget" @bind-Value:after="Layout.Refresh"
                Text="@Localization[nameof(Resource.Abilities_ShouldCharacterSeeTarget)]" />
    </div>
}

@code {
    [Parameter]
    public string EffectType { get; set; } = string.Empty;

    [Parameter]
    public int EffectOrderNumber { get; set; }

    TargetSelectionAspect? aspect;

    protected override void InitializeAlso()
    {
        EffectBase? effect = Ability.GetEffectByIndex(EffectOrderNumber);
        TargetSelectionAspect? foundAspect = effect?.GetAspect<TargetSelectionAspect>();

        if (foundAspect is null)
        {
            Navigation.NavigateTo("/404");
        }
        else
        {
            aspect = foundAspect;
        }
    }
}