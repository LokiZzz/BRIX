@using BRIX.Library.Aspects.Base
@using BRIX.Web.Client.Models.Characters

<div class="box">
    <p class="title">@Localization[nameof(Resource.Abilities_Aspects)]</p>
    @foreach (AspectVM aspect in aspects)
    {
        <p class="has-text-weight-bold">
            <span><i class="@aspect.Icon"></i></span>
            <span>@aspect.Title</span>
        </p>
        <LexisBlock Model="aspect.Model" />
    }
</div>

@code {
    private List<AspectVM> aspects = [];

    [Parameter]
    public List<AspectBase> Aspects { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (Aspects is not null && Aspects.Any())
        {
            aspects = Aspects.Select(GetVMFromAspectBase).ToList();
        }
    }

    private AspectVM GetVMFromAspectBase(AspectBase aspect)
    {
        AspectVM fromDictionary = BRIX.Web.Client.Models.Characters.Aspects.Collection[aspect.GetType()];

        return new AspectVM
        {
            Model = aspect,
            Title = Localization[$"Abilities_Aspect_{aspect.GetType().Name}"],
            Icon = fromDictionary.Icon,
            Route = fromDictionary.Route
        };
    }
}
