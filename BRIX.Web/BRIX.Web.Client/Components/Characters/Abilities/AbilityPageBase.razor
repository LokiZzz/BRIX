@code {
    [CascadingParameter]
    public AbilityLayout Layout { get; set; } = default!;

    [Parameter]
    public Guid CharacterId { get; set; }

    [Parameter]
    public Guid? AbilityId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();

        if (CharacterManager.EditingCharacter is null || CharacterManager.EditingCharacter.Id != CharacterId)
        {
            await CharacterManager.EditCharacterAsync(CharacterId);
        }

        if (Layout.Ability is null || Layout.Ability.Id != AbilityId)
        {
            Ability? editingAbility;

            if (AbilityId is null)
            {
                editingAbility = new();
                CharacterManager.EditingCharacter?.AddAbility(editingAbility);
            }
            else
            {
                editingAbility = CharacterManager.EditingCharacter?.Abilities.FirstOrDefault(x => x.Id == AbilityId);
            }

            if (editingAbility is not null)
            {
                Layout.Ability = editingAbility;
                AbilityId = editingAbility.Id;
            }
            else
            {
                Navigation.NavigateTo("/404");
            }
        }

        Layout.CharacterId = CharacterId;

        if (AbilityId is not null)
        {
            Layout.AbilityId = AbilityId;
        }
    }
}
