@page "/characters"

<div class="section">
    <div class="container is-max-tablet">
        <h1 class="title">@Localization[nameof(Resource.Common_Characters)]</h1>

        @if (_characters is not null)
        {
            <button class="button is-large is-fullwidth block" @onclick="@(async () => Add())">
                <i class="fa fa-plus-circle"></i>
            </button>

            @foreach (Character character in _characters)
            {
                <div class="box block">
                    <p class="title">@character.Name</p>
                    <p class="subtitle">@character.Level Level</p>
                    <div class="buttons">
                        <button class="button" @onclick="@(() => Edit(character))">
                            @Localization[nameof(Resource.Common_Edit)]
                        </button>
                        <button class="button is-danger" @onclick="@(() => Delete(character))">
                            @Localization[nameof(Resource.Common_Remove)]
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <p>Characters is loading.</p>
        }
    </div>
</div>



@code {
    private List<Character>? _characters = null;

    protected override async Task OnInitializedAsync()
    {
        _characters = await CharacterManager.GetAll();
    }

    private void Add()
    {
        CharacterManager.EditingCharacter = null;
        Navigation.NavigateTo("/characters/edit");
    }

    private void Edit(Character character)
    {
        CharacterManager.EditingCharacter = character.Copy() 
            ?? throw new Exception("Не удалось скопировать персонажа.");
        Navigation.NavigateTo("/characters/edit");
    }

    private async Task Delete(Character character)
    {
        CharacterOperationResponse result = await CharacterManager.Delete(character);

        if(result.Success)
        {
            _characters?.Remove(character);
        }
    }
}
