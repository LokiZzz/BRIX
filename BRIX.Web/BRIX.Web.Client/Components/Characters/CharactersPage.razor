@page "/characters"

<h3>Characters Page</h3>

@if(_characters.Count > 0)
{
    <button @onclick="@(async () => Add())">Add new character</button>

    @foreach (Character character in _characters)
    {
        <div style="display:inline;background-color:aquamarine;">
            <p>@character.Name</p>
            <p>@character.Level Level</p>
            <button @onclick="@(() => Edit(character))">Edit</button>
            <button @onclick="@(() => Delete(character))">Delete</button>
        </div>
    }
}
else
{
    <div>
        <p>Characters is loading.</p>
    </div>
}

@code {
    private List<Character> _characters = [];

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        _characters = await CharacterManager.GetAll();
    }

    private void Add()
    {
        CharacterManager.EditingCharacter = null;
        Navigation.NavigateTo("/characters/edit");
    }

    private void Edit(Character character)
    {
        CharacterManager.EditingCharacter = character.Copy() 
            ?? throw new Exception("Не удалось скопировать персонажа.");
        Navigation.NavigateTo("/characters/edit");
    }

    private async Task Delete(Character character)
    {
        CharacterOperationResponse result = await CharacterManager.Delete(character);

        if(result.Success)
        {
            _characters.Remove(character);
        }
    }
}
