@page "/characters/{CharacterId:guid?}"

<div class="section">
    <div class="container block">
        <p class="title">@Character?.Name</p>
        <p class="subtitle">@Localization[nameof(Resource.Characters_Level)] @Character?.Level</p>
    </div>
    <Tab Class="is-centered is-boxed">
        <TabItem Title="@Localization[nameof(Resource.Character)]">
            <MainSection Character="Character"/>
        </TabItem>
        <TabItem Title="@Localization[nameof(Resource.Character_Abilities)]">
            <div class="notification">
                <p>Способности персонажа.</p>
            </div>
        </TabItem>
        <TabItem Title="@Localization[nameof(Resource.Character_Inventory)]">
            <div class="notification">
                <p>Основная информация о персонаже.</p>
            </div>
        </TabItem>
        <TabItem Title="@Localization[nameof(Resource.Character_Details)]">
            <div class="notification">
                <p>Детальная информация о персонаже.</p>
            </div>
        </TabItem>
    </Tab>
</div>

@code {
    [Parameter]
    public Guid? CharacterId { get; set; }

    public Character? Character { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        if (CharacterManager.EditingCharacter is not null)
        {
            Character = CharacterManager.EditingCharacter;
            CharacterId = Character.Id;
        }
        else if(CharacterId is not null)
        {
            Character = await CharacterManager.GetAsync(CharacterId.Value);

            if(Character is null)
            {
                Navigation.NavigateTo("/404");
            }

            CharacterManager.EditingCharacter = Character;
        }
    }
}
