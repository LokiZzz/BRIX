@page "/forgot-password"
@using System.ComponentModel.DataAnnotations

<div class="section">
    <div class="container is-max-tablet">
        <EditForm Model="@_model" OnValidSubmit="@Send" class="box block">

            <h1 class="title">@Localization[nameof(Resource.Account_ResetPassword)]</h1>

            <DataAnnotationsValidator />
            <ValidationSummary class="notification block is-danger" />

            <p class="block"></p>

            @if (_showError)
            {
                <div class="notification is-danger block">
                    @Localization[Resource.Account_ForgotPasswordFailed]
                </div>
            }

            @if (_showSuccess)
            {
                <div class="notification block is-success">
                    @Localization[nameof(Resource.Account_ForgotPasswordRequestSuccseeded)]
                </div>
            }

            <div class="field">
                <label class="label">@Localization[nameof(Resource.Account_Email)]</label>
                <div class="control">
                    <InputText class="input" type="email" placeholder="address@example.com" @bind-Value="_model.Email" />
                </div>
            </div>

            <button type="submit" class="button">@Localization[nameof(Resource.Common_Send)]</button>
        </EditForm>
    </div>
</div>

@code {
    private ForgotPasswordModel _model = new();

    private bool _showError = false;
    private bool _showSuccess = false;

    private async Task Send()
    {
        bool success = await AuthService.ForgotPassword(_model.Email);
        _showError = !success;
        _showSuccess = success;

    }

    public class ForgotPasswordModel
    {
        [Required(ErrorMessageResourceName = nameof(Resource.Validation_EmailRequired),
            ErrorMessageResourceType = typeof(Resource))]
        [EmailAddress(ErrorMessageResourceName = nameof(Resource.Validation_EmailFormat),
            ErrorMessageResourceType = typeof(Resource))]
        public string Email { get; set; } = string.Empty;
    }
}
