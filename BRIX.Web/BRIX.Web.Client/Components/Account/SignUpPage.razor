@page "/sign-up"

<div class="section">
    <div class="container is-max-tablet">
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration" class="box block">
            <DataAnnotationsValidator />

            <h1 class="title">@Localization[nameof(Resource.Account_SignUp)]</h1>

            <ValidationSummary class="notification block is-danger" />

            @if (Errors?.Count() > 0)
            {
                foreach(string error in Errors)
                {
                    <div class="notification is-danger">@error</div>
                }
            }

            <div class="field">
                <label class="label">@Localization[nameof(Resource.Account_Email)]</label>
                <div class="control">
                    <InputText class="input" type="email" placeholder="address@example.com"
                        @bind-Value="RegisterModel.Email" />
                </div>
            </div>

            <div class="field">
                <label class="label">@Localization[nameof(Resource.Account_Password)]</label>
                <div class="control">
                    <InputText class="input" type="password" placeholder="********" 
                        @bind-Value="RegisterModel.Password" />
                </div>
            </div>

            <div class="field">
                <label class="label">@Localization[nameof(Resource.Account_ConfirmPassword)]</label>
                <div class="control">
                    <InputText class="input" type="password" placeholder="********" 
                        @bind-Value="RegisterModel.ConfirmPassword" />
                </div>
            </div>

            <button type="submit" class="button is-primary">@Localization[nameof(Resource.Account_SignUpAction)]</button>
        </EditForm>
    </div>
</div>

@code {

    private SignUpModel RegisterModel = new ();
    private bool ShowErrors;
    private IEnumerable<string> Errors = [];

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        SignUpResponse result = await AuthService.SignUp(RegisterModel.ToDto());

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/sign-in");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

}