//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRIX.Lexica {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BRIX.Lexica.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use this ability you have to spend {0:prop.ActionPoints--action point}..
        /// </summary>
        public static string ActionPointAspect {
            get {
                return ResourceManager.GetString("ActionPointAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To activate this ability, certain conditions must be met. {0:prop.Conditions}.
        /// </summary>
        public static string ActivationConditionsAspect {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easy difficulty condition.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_EasyActivationCondition {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_EasyActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hard difficulty condition.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_HardActivationCondition {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_HardActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium difficulty condition.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_MediumActivationCondition {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_MediumActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character need to able to talk.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_NeedToAbleToTalk {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_NeedToAbleToTalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character need to able to move.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_NeedToMove {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_NeedToMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character need to able to move arm.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_NeedToMoveArm {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_NeedToMoveArm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character need to able to move both arms.
        /// </summary>
        public static string ActivationConditionsAspect_Conditions_NeedToMoveBothArms {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Conditions_NeedToMoveBothArms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No special conditions are required to activate this ability..
        /// </summary>
        public static string ActivationConditionsAspect_Special_None {
            get {
                return ResourceManager.GetString("ActivationConditionsAspect_Special_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use this ability {0:prop.UsesCount--time}. The number of uses is restored via {0:prop.Condition} after the first use..
        /// </summary>
        public static string CooldownAspect {
            get {
                return ResourceManager.GetString("CooldownAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 day.
        /// </summary>
        public static string CooldownAspect_Condition_Day {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 hour.
        /// </summary>
        public static string CooldownAspect_Condition_Hour {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 years.
        /// </summary>
        public static string CooldownAspect_Condition_HundredYears {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_HundredYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 minute.
        /// </summary>
        public static string CooldownAspect_Condition_Minute {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 month.
        /// </summary>
        public static string CooldownAspect_Condition_Month {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 round.
        /// </summary>
        public static string CooldownAspect_Condition_Round {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 10 years.
        /// </summary>
        public static string CooldownAspect_Condition_TenYears {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_TenYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 week.
        /// </summary>
        public static string CooldownAspect_Condition_Week {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 year.
        /// </summary>
        public static string CooldownAspect_Condition_Year {
            get {
                return ResourceManager.GetString("CooldownAspect_Condition_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This ability does not require recharging before the next use..
        /// </summary>
        public static string CooldownAspect_Special_None {
            get {
                return ResourceManager.GetString("CooldownAspect_Special_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to this effect, the ability deals {0:prop.Impact} of damage..
        /// </summary>
        public static string DamageEffect {
            get {
                return ResourceManager.GetString("DamageEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect duration: {0:prop.Duration--@Unit}..
        /// </summary>
        public static string DurationAspect {
            get {
                return ResourceManager.GetString("DurationAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character can cancel the effect at any time..
        /// </summary>
        public static string DurationAspect_Special_CanDisable {
            get {
                return ResourceManager.GetString("DurationAspect_Special_CanDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to day.
        /// </summary>
        public static string DurationAspect_Unit_Day {
            get {
                return ResourceManager.GetString("DurationAspect_Unit_Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hour.
        /// </summary>
        public static string DurationAspect_Unit_Hour {
            get {
                return ResourceManager.GetString("DurationAspect_Unit_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to minute.
        /// </summary>
        public static string DurationAspect_Unit_Minute {
            get {
                return ResourceManager.GetString("DurationAspect_Unit_Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to round.
        /// </summary>
        public static string DurationAspect_Unit_Round {
            get {
                return ResourceManager.GetString("DurationAspect_Unit_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to year.
        /// </summary>
        public static string DurationAspect_Unit_Year {
            get {
                return ResourceManager.GetString("DurationAspect_Unit_Year", resourceCulture);
            }
        }
    }
}
