<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:BRIX.Mobile.ViewModel.Characters"
             xmlns:m="clr-namespace:BRIX.Mobile.Models.Characters"
             xmlns:controls="clr-namespace:BRIX.Mobile.Resources.Controls"
             xmlns:icons="clr-namespace:BRIX.Mobile.View.IconFonts"
             xmlns:lcz="clr-namespace:BRIX.Mobile.Resources.Localizations"
             x:Class="BRIX.Mobile.View.Characters.CharacterPage"
             x:DataType="vm:CharacterPageVM"
             x:Name="CharacterContentPage"
             ControlTemplate="{StaticResource BusyPageTemplate}"
             Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Character}}" Padding="0">

    <ContentPage.Resources>
        <Style x:Key="StatusTimeButton" TargetType="Button" BasedOn="{StaticResource SquareIconButton}">
            <Setter Property="WidthRequest" Value="-1"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="7,0"/>
            <Setter Property="Margin" Value="-1
                    "/>
        </Style>
    </ContentPage.Resources>
    
    <Shell.TitleView>
        <Grid ColumnDefinitions="*,auto" ColumnSpacing="10" Padding="0,10,15,10">
            <Label 
                Grid.Column="0"
                Style="{StaticResource NavigationBarTitle}"
                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Character}}"/>

            <HorizontalStackLayout Grid.Column="1" Spacing="10" IsVisible="{Binding PlayerHaveCharacter}">
                <Button Style="{StaticResource SquareIconButton}" Text="{x:Static icons:Awesome.PenToSquare}" 
                        Command="{Binding Source={x:Reference CharacterContentPage}, Path= BindingContext.EditCommand}"/>
                <Button Style="{StaticResource SquareIconButton}" Text="{x:Static icons:Awesome.FileImage}" 
                        Command="{Binding Source={x:Reference CharacterContentPage}, Path= BindingContext.PictureCommand}"
                        IsVisible="{Binding Source={x:Reference CharacterContentPage}, Path= BindingContext.PlayerHaveCharacter}"/>
                <Button Style="{StaticResource SquareIconButton}" Text="{x:Static icons:Awesome.PeopleArrows}" 
                        Command="{Binding Source={x:Reference CharacterContentPage}, Path= BindingContext.SwitchCommand}"/>
            </HorizontalStackLayout>
        </Grid>
    </Shell.TitleView>

    <Grid RowDefinitions="*,auto">
        <ScrollView Grid.Row="0">
            <Grid Margin="0,0,0,10">
                <!--In case of empty character pool-->
                <Grid 
                    IsVisible="{Binding ShowNoCharacterText}"
                    RowDefinitions="*,*,auto"
                    Margin="10,0">
                    <VerticalStackLayout Grid.Row="0">
                        <Label Style="{StaticResource ParagraphTitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.PlayerHaveNoCharacterTitle}}" />
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.PlayerHaveNoCharacter}}"/>
                    </VerticalStackLayout>
                    <Label 
                        Grid.Row="1"
                        FontFamily="AwesomeRPG" 
                        FontSize="160" 
                        TextColor="{StaticResource BRIXMedium}" 
                        Text="{x:Static icons:AwesomeRPG.CloakAndDagger}"
                        HorizontalOptions="Center"
                        Margin="0,-60,0,0"/>
                    <Button 
                        Grid.Row="2" 
                        Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.CreateNewCharacter}}" 
                        Command="{Binding CreateCommand}"/>
                </Grid>
        
                <!--In case of player have at leatst one character-->
                <VerticalStackLayout IsVisible="{Binding PlayerHaveCharacter}" Spacing="10">
                    <!--Portrait-->
                    <Border 
                        Style="{StaticResource SideMarginBlockBorder}"
                        Padding="0"
                        HeightRequest="250" 
                        StrokeShape="RoundRectangle 10,50,50,10">
                        <Grid>
                            <controls:ZoomContainer 
                                BackgroundColor="{StaticResource BRIXMedium}" 
                                InputTransparent="True"
                                ContentX="{Binding Character.PortraitX}"
                                ContentY="{Binding Character.PortraitY}"
                                ContentScale="{Binding Character.PortraitS}">
                                <Image Source="{Binding Character.PortraitImage}" IsAnimationPlaying="True"/>
                            </controls:ZoomContainer>
                            <Grid Margin="10">
                                <Label 
                                    FontFamily="Awesome" 
                                    Text="{x:Static icons:Awesome.ImagePortrait}" 
                                    FontSize="120" 
                                    IsVisible="{Binding ShowImagePlaceholder}"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Center"
                                    Opacity="0.5"/>
                                <Border Style="{StaticResource TransparentBorder}" VerticalOptions="Start" HorizontalOptions="Start" Padding="10,5">
                                    <Label Style="{StaticResource TitleLabel}" Text="{Binding Character.Name}" />
                                </Border>
                                <Border Style="{StaticResource TransparentBorder}" VerticalOptions="End" HorizontalOptions="End" Padding="10,5">
                                    <Label 
                                        Style="{StaticResource TitleLabel}" 
                                        Text="{lcz:Format ValuePath=Character.Level, FormatPath={x:Static lcz:LocalizationKeys.LevelFormat}}"
                                        Margin="1"/>
                                </Border>
                            </Grid>
                            <Label 
                                IsVisible="{Binding Character.IsOnVergeOfLifeAndDeath}"
                                FontFamily="Awesome" 
                                FontSize="120" 
                                TextColor="{StaticResource BRIXMedium}" 
                                Text="{x:Static icons:Awesome.Skull}"
                                HorizontalOptions="Center"
                                VerticalOptions="Center"
                                Margin="0,-20,0,0"
                                Opacity=".75"/>
                        </Grid>
                    </Border>
                    <!--EXP-->
                    <CarouselView ItemsSource="{Binding ExpCards}" Loop="False" IndicatorView="experienceCarouselIndicator">
                        <CarouselView.ItemsLayout>
                            <LinearItemsLayout 
                                Orientation="Horizontal" 
                                ItemSpacing="20" 
                                SnapPointsAlignment="Center" 
                                SnapPointsType="Mandatory"/>
                        </CarouselView.ItemsLayout>
                        <CarouselView.ItemTemplate>
                            <DataTemplate x:DataType="vm:ExperienceInfoVM">
                                <Border Style="{StaticResource BlockBorder}">
                                    <Grid RowDefinitions="auto,auto" ColumnDefinitions="*,auto,auto">
                                        <Label Text="{Binding Title}" Style="{StaticResource TitleLabel}" Grid.Row="0" Grid.Column="0" VerticalTextAlignment="Center"/>
                                        <Label Grid.Row="0" Grid.Column="1" Margin="0,0,15,0" VerticalTextAlignment="Center">
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Style="{StaticResource TitleLabel}" Text="{Binding Current}"/>
                                                    <Span Style="{StaticResource TitleLabel}" Text=" / "/>
                                                    <Span Style="{StaticResource TitleLabel}" Text="{Binding Target}"/>
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Button 
                                            Grid.Row="0" Grid.Column="2" 
                                            Style="{StaticResource SquareIconButton}"
                                            FontFamily="{Binding IconFont}"
                                            Text="{Binding Icon}" 
                                            Command="{Binding DoCardActionCommand}"/>
                                        <ProgressBar 
                                            Margin="0,5,0,-5"
                                            Grid.Row="1" Grid.ColumnSpan="3"
                                            Progress="{Binding Percent}"
                                            ProgressColor="{StaticResource BRIXLime}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </CarouselView.ItemTemplate>
                    </CarouselView>
                    <IndicatorView 
                        x:Name="experienceCarouselIndicator"
                        IndicatorColor="{StaticResource BRIXDim}"
                        SelectedIndicatorColor="{StaticResource BRIXWhite}"
                        HorizontalOptions="Center"/>    
                    <!--Health-->
                    <Border Style="{StaticResource SideMarginBlockBorder}">
                        <Grid RowDefinitions="auto,auto,auto" ColumnDefinitions="*,auto,auto">
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Health}}" LineBreakMode="TailTruncation" Style="{StaticResource TitleLabel}" Grid.Row="0" Grid.Column="0"/>
                            <Label Grid.Row="0" Grid.Column="1" Margin="0,0,15,0" VerticalTextAlignment="Center">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Style="{StaticResource TitleLabel}" Text="{Binding Character.CurrentHealth}"/>
                                        <Span Style="{StaticResource TitleLabel}" Text=" / "/>
                                        <Span Style="{StaticResource TitleLabel}" Text="{Binding Character.MaxHealth}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <HorizontalStackLayout Grid.Row="0" Grid.Column="2" Spacing="10">
                                <Button
                                    Style="{StaticResource SquareIconButton}"
                                    Text="{x:Static icons:Awesome.Heart}"
                                    Command="{Binding RestoreHealthCommand}"/>
                                <Button
                                    Style="{StaticResource SquareIconButton}"
                                    Text="{x:Static icons:Awesome.HeartCirclePlus}"
                                    Command="{Binding AddHealthCommand}"/>
                                <Button
                                    Style="{StaticResource SquareIconButton}"
                                    Command="{Binding EditHealthCommand}"/>
                            </HorizontalStackLayout>
                        
                            <ProgressBar 
                                Margin="0,5,0,-5"
                                Grid.Row="1" Grid.ColumnSpan="3"
                                Progress="{Binding Character.HealthPercent}"
                                ProgressColor="{StaticResource BRIXLime}">
                                <ProgressBar.Triggers>
                                    <DataTrigger TargetType="ProgressBar" Binding="{Binding Character.HealthState}" Value="0">
                                        <Setter Property="ProgressColor" Value="{StaticResource BRIXLime}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="ProgressBar" Binding="{Binding Character.HealthState}" Value="1">
                                        <Setter Property="ProgressColor" Value="{StaticResource BRIXOrange}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="ProgressBar" Binding="{Binding Character.HealthState}" Value="2">
                                        <Setter Property="ProgressColor" Value="{StaticResource BRIXRed}" />
                                    </DataTrigger>
                                </ProgressBar.Triggers>
                            </ProgressBar>
                            <Label 
                                Grid.Row="2" Grid.ColumnSpan="3" 
                                HorizontalOptions="End" Margin="0,3,0,0" 
                                IsVisible="{Binding Character.ShowHealthFormula}">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span 
                                            Text="{Binding Character.RawMaxHealth}"/>
                                        <Span Text="{Binding Character.HealthFromExp, StringFormat=' + {0}'}"/>
                                        <Span Text="{Binding Character.MaxHealthBonusString}" TextColor="{StaticResource BRIXLime}"/>
                                        <Span Text="{Binding Character.MaxHealthPenaltyString}" TextColor="{StaticResource BRIXRed}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                        </Grid>
                    </Border>
                    <!--Speed-->
                    <Border Style="{StaticResource SideMarginBlockBorder}">
                        <Grid ColumnDefinitions="auto,*,auto" RowDefinitions="auto,auto" ColumnSpacing="10" RowSpacing="20">
                            <Label 
                                Grid.Row="0" Grid.Column="0"
                                Style="{StaticResource TitleLabel}" 
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Speed}}"/>
                            <HorizontalStackLayout Grid.Row="0"  Grid.Column="1" Spacing="5">
                                <Label Style="{StaticResource TitleLabel}" Text="{Binding Character.Speed.Walk}" Margin="0,0,10,0"/>
                                <Label Style="{StaticResource TitleLabel}" Text="{Binding Character.Speed.WalkMAP, StringFormat='({0}'}"/>
                                <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.MAPUnit}, StringFormat='{0})'}"/>
                            </HorizontalStackLayout>
                            <Button
                                Grid.Row="0" Grid.Column="2"
                                Style="{StaticResource SquareIconButton}"
                                FontFamily="AwesomeRPG"
                                Text="{x:Static icons:AwesomeRPG.Footprint}"
                                Command="{Binding EditSpeedCommand}"/>
                            <Grid
                                Grid.Row="2" Grid.ColumnSpan="3"
                                ColumnDefinitions="*,*,*,*,*" RowDefinitions="*,*" RowSpacing="10">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="VerticalOptions" Value="Center"/>
                                        <Setter Property="VerticalTextAlignment" Value="Center"/>
                                        <Setter Property="HorizontalOptions" Value="Center"/>
                                        <Setter Property="HorizontalTextAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>

                                <Label 
                                    Grid.Row="0" Grid.Column="0" FontSize="24"
                                    FontFamily="AwesomeRPG" Text="{x:Static icons:AwesomeRPG.Fish}"/>
                                <Label 
                                    Grid.Row="0" Grid.Column="1" FontSize="24"
                                    FontFamily="AwesomeRPG" Text="{x:Static icons:AwesomeRPG.Gecko}"/>
                                <Label 
                                    Grid.Row="0" Grid.Column="2" FontSize="24"
                                    FontFamily="AwesomeRPG" Text="{x:Static icons:AwesomeRPG.FeatheredWing}"/>
                                <Label 
                                    Grid.Row="0" Grid.Column="3" FontSize="24"
                                    FontFamily="AwesomeRPG" Text="{x:Static icons:AwesomeRPG.Shovel}"/>
                                <Label 
                                    Grid.Row="0" Grid.Column="4" FontSize="24"
                                    FontFamily="AwesomeRPG" Text="{x:Static icons:AwesomeRPG.PlayerTeleport}"/>

                                <Label Grid.Row="1" Grid.Column="0">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Character.Speed.Swim}"/>
                                            <Span Text="{Binding Character.Speed.SwimMAP, StringFormat=' ({0})'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="1" Grid.Column="1">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Character.Speed.Climb}"/>
                                            <Span Text="{Binding Character.Speed.ClimbMAP, StringFormat=' ({0})'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="1" Grid.Column="2">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Character.Speed.Fly}"/>
                                            <Span Text="{Binding Character.Speed.FlyMAP, StringFormat=' ({0})'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="1" Grid.Column="3">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Character.Speed.Burrow}"/>
                                            <Span Text="{Binding Character.Speed.BurrowMAP, StringFormat=' ({0})'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="1" Grid.Column="4">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Character.Speed.Teleportation}"/>
                                            <Span Text="{Binding Character.Speed.TeleportationMAP, StringFormat=' ({0})'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                            </Grid>
                            <!--<Label Grid.Row="1" Grid.ColumnSpan="3">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Swim}}"/>
                                        <Span Text=": "/>
                                        <Span Text="{Binding Character.SwimSpeed}"/>
                                        <Span Text="{Binding Character.SwimMAP, StringFormat=' ({0}); '}"/>
                                        <Span Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Climb}}"/>
                                        <Span Text=": "/>
                                        <Span Text="{Binding Character.ClimbSpeed}"/>
                                        <Span Text="{Binding Character.ClimbMAP, StringFormat=' ({0}); '}"/>
                                        <Span Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Fly}}"/>
                                        <Span Text=": "/>
                                        <Span Text="{Binding Character.FlySpeed}"/>
                                        <Span Text="{Binding Character.FlyMAP, StringFormat=' ({0}); '}"/>
                                        <Span Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Burrow}}"/>
                                        <Span Text=": "/>
                                        <Span Text="{Binding Character.BurrowSpeed}"/>
                                        <Span Text="{Binding Character.BurrowMAP, StringFormat=' ({0}); '}"/>
                                        <Span Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Teleportation}}"/>
                                        <Span Text=": "/>
                                        <Span Text="{Binding Character.TeleportationSpeed}"/>
                                        <Span Text="{Binding Character.TeleportationMAP, StringFormat=' ({0});'}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>-->
                        </Grid>
                    </Border>
                    <!--Statuses-->
                    <!--<Border Style="{StaticResource SideMarginBlockBorder}">
                        <VerticalStackLayout Spacing="10">
                            <Grid ColumnDefinitions="*,auto" >
                                <Label 
                                    Grid.Column="0"
                                    Style="{StaticResource TitleLabel}" 
                                    Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Statuses}}"/>
                                <HorizontalStackLayout Grid.Column="1" Padding="0">
                                    <Button 
                                        Style="{StaticResource SquareIconButton}" 
                                        Text="{x:Static icons:Awesome.PenToSquare}"
                                        Command="{Binding GoToStatusesCommand}"/>
                                    <HorizontalStackLayout Spacing="7">
                                        <Button 
                                            Style="{StaticResource SquareIconButton}" 
                                            Text="{x:Static icons:Awesome.CircleArrowLeft}"
                                            Command="{Binding DecreaseStatusTimeCommand}"/>
                                        <Label 
                                            FontFamily="AwesomeRPG" 
                                            FontSize="25"
                                            VerticalOptions="Center"
                                            HorizontalOptions="Center"
                                            HorizontalTextAlignment="Center"
                                            TextColor="{StaticResource BRIXWhite}"
                                            Text="{x:Static icons:AwesomeRPG.Stopwatch}"
                                            WidthRequest="25"/>
                                        <Button 
                                            Style="{StaticResource SquareIconButton}" 
                                            Text="{x:Static icons:Awesome.CircleArrowRight}"
                                            Command="{Binding IncreaseStatusTimeCommand}"/> 
                                    </HorizontalStackLayout>
                                </HorizontalStackLayout>
                            </Grid>
                            <Label 
                                VerticalOptions="Center"
                                VerticalTextAlignment="Center"
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.HaveNoActiveStatuses}}"
                                IsVisible="{Binding Character.ShowStatuses, Converter={StaticResource NotConverter}}"/>
                            <CollectionView 
                                Grid.Row="1" 
                                x:Name="statusesCollectionView" 
                                ItemsSource="{Binding Character.Statuses}"
                                IsVisible="{Binding Character.ShowStatuses}">
                                <CollectionView.ItemsLayout>
                                    <GridItemsLayout Orientation="Vertical" VerticalItemSpacing="5"/>
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="m:StatusItemVM">
                                        <controls:BasicCollectionItem
                                            Text="{Binding Name}"
                                            SecondaryText="{Binding RoundsLeft}"
                                            DeleteCommand="{Binding Source={x:Reference statusesCollectionView}, Path= BindingContext.RemoveStatusCommand}"
                                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </VerticalStackLayout>
                    </Border>-->
                </VerticalStackLayout>
            </Grid>
        </ScrollView>
        <Border Grid.Row="1" Style="{StaticResource EmptyShadowBorder}"/>
    </Grid>
</ContentPage>