<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:v="clr-namespace:BRIX.Mobile.View.Abilities"
             xmlns:vm="clr-namespace:BRIX.Mobile.ViewModel.Abilities.Aspects"
             xmlns:lcz="clr-namespace:BRIX.Mobile.Resources.Localizations"
             xmlns:icons="clr-namespace:BRIX.Mobile.View.IconFonts"
             xmlns:controls="clr-namespace:BRIX.Mobile.Resources.Controls"
             x:Class="BRIX.Mobile.View.Abilities.Aspects.TargetSelectionAspectPage"
             x:DataType="vm:TargetSelectionAspectPageVM"
             Shell.TabBarIsVisible="False"
             Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AspectTargetSelection}}">

    <Shell.TitleView>
        <controls:TitleView/>
    </Shell.TitleView>

    <ContentPage.Resources>
        <Style TargetType="Label" x:Key="StrategyLabel">
            <Setter Property="TextColor" Value="{StaticResource BRIXWhite}"/>
            <Setter Property="VerticalOptions" Value="Center"/>
            <Setter Property="VerticalTextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="15,0,0,0"/>
        </Style>
        <Style TargetType="CheckBox" x:Key="StrategyCheckBox">
            <Setter Property="HorizontalOptions" Value="End"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <Setter Property="Color" Value="{StaticResource BRIXWhite}"/>
        </Style>
        <Style TargetType="Button" x:Key="StrategyButton">
            <Setter Property="HeightRequest" Value="35"/>
            <Setter Property="BackgroundColor" Value="{StaticResource BRIXDim}"/>
        </Style>
        <Style TargetType="ImageButton" x:Key="ShapeButton">
            <Setter Property="BackgroundColor" Value="{StaticResource BRIXDim}"/>
            <Setter Property="HeightRequest" Value="60"/>
            <Setter Property="WidthRequest" Value="60"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
        <Style TargetType="Image" x:Key="ShapeScheme">
            <Setter Property="HeightRequest" Value="150"/>
            <Setter Property="Margin" Value="0,10"/>
        </Style>
    </ContentPage.Resources>
    
    <Grid RowDefinitions="*,auto">
        <ScrollView Grid.Row="0" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="10" Margin="0,0,0,10">
                <!--Strategy-->
                <Border Style="{StaticResource BlockBorder}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Strategy}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStrategyHint}}"/>
                        <Grid>
                            <Button Style="{StaticResource StrategyButton}" Command="{Binding SetNTADCommand}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsNTAD}" Value="True">
                                        <Setter Property="BackgroundColor" Value="{StaticResource BRIXOrange}" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyNTAD}}" Style="{StaticResource StrategyLabel}" InputTransparent="True"/>
                            <CheckBox IsChecked="{Binding IsNTAD}" Style="{StaticResource StrategyCheckBox}"  InputTransparent="True"/>
                        </Grid>
                        <Grid>
                            <Button Style="{StaticResource StrategyButton}" Command="{Binding SetAREACommand}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsAREA}" Value="True">
                                        <Setter Property="BackgroundColor" Value="{StaticResource BRIXOrange}" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyArea}}" Style="{StaticResource StrategyLabel}"  InputTransparent="True"/>
                            <CheckBox IsChecked="{Binding IsAREA}" Style="{StaticResource StrategyCheckBox}" InputTransparent="True"/>
                        </Grid>
                        <Grid>
                            <Button Style="{StaticResource StrategyButton}" Command="{Binding SetCharacterCommand}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsCharacter}" Value="True">
                                        <Setter Property="BackgroundColor" Value="{StaticResource BRIXOrange}" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyCharacter}}" Style="{StaticResource StrategyLabel}"  InputTransparent="True"/>
                            <CheckBox IsChecked="{Binding IsCharacter}" Style="{StaticResource StrategyCheckBox}" InputTransparent="True"/>
                        </Grid>
                    </VerticalStackLayout>
                </Border>
                <!--NTAD-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsNTAD}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyNTAD}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyNTADHint}}"/>
                        <controls:FramedEntry Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyNTADCount}}" Text="{Binding Aspect.NTADCount}"/>
                        <controls:FramedEntry Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyNTADDistance}}" Text="{Binding Aspect.NTADistance}"/>
                    </VerticalStackLayout>
                </Border>
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsNTAD}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Obstacles}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionNTADObstacleHint}}"/>
                        <controls:PickerButton
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            ItemSource="{Binding Aspect.Obstacles}"
                            SelectedItem="{Binding Aspect.ObstacleBetweenCharacterAndTarget}"
                            DisplayMember="LocalizedName"/>

                    </VerticalStackLayout>
                </Border>
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsNTAD}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionIsRandom}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionIsRandomHint}}"/>
                        <HorizontalStackLayout Spacing="10">
                            <CheckBox 
                                Color="{StaticResource BRIXWhite}"
                                IsChecked="{Binding Aspect.IsRandomSelection}"/>
                            <Label 
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionIsRandomCheckBox}}"
                                VerticalOptions="Center"/>
                        </HorizontalStackLayout>
                    </VerticalStackLayout>
                </Border>
                <!--AREA-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsAREA}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyArea}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyAreaHint}}"/>
                        <controls:FramedEntry Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyAreaDistance}}" Text="{Binding Aspect.AreaDistance}"/>
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AreaBinding}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AreaBindingHint}}"/>
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding Aspect.IsAreaBoundedTo}"/>
                            <Label 
                                VerticalOptions="Center"
                                VerticalTextAlignment="Center"
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.IsAreaCanBound}}"/>
                        </HorizontalStackLayout>
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Area}}"/>
                        <FlexLayout JustifyContent="SpaceBetween">
                            <ImageButton 
                                Style="{StaticResource ShapeButton}" 
                                Source="Shape/brick_icon.svg"
                                Command="{Binding SetShapeCommand}" 
                                CommandParameter="Brick" 
                                BackgroundColor="{Binding IsBrick, Converter={StaticResource SelectedToColorConverter}}"/>
                            <ImageButton 
                                Style="{StaticResource ShapeButton}" 
                                Source="Shape/sphere_icon.svg" 
                                Command="{Binding SetShapeCommand}" 
                                CommandParameter="Sphere"
                                BackgroundColor="{Binding IsSphere, Converter={StaticResource SelectedToColorConverter}}"/>
                            <ImageButton 
                                Style="{StaticResource ShapeButton}" 
                                Source="Shape/cylinder_icon.svg" 
                                Command="{Binding SetShapeCommand}" 
                                CommandParameter="Cylinder"
                                BackgroundColor="{Binding IsCylinder, Converter={StaticResource SelectedToColorConverter}}"/>
                            <ImageButton 
                                Style="{StaticResource ShapeButton}" 
                                Source="Shape/cone_icon.svg" 
                                Command="{Binding SetShapeCommand}" 
                                CommandParameter="Cone"
                                BackgroundColor="{Binding IsCone, Converter={StaticResource SelectedToColorConverter}}"/>
                            <ImageButton 
                                Style="{StaticResource ShapeButton}" 
                                Source="Shape/cross_icon.svg" 
                                Command="{Binding SetShapeCommand}" 
                                CommandParameter="VoxelArray"
                                BackgroundColor="{Binding IsVoxelArray, Converter={StaticResource SelectedToColorConverter}}"/>
                        </FlexLayout>

                        <Grid>
                            <!--Brick-->
                            <Grid RowDefinitions="auto,*" ColumnDefinitions="*,*,*" ColumnSpacing="10" IsVisible="{Binding IsBrick}">
                                <Image 
                                    Grid.Row="0" Grid.ColumnSpan="3" 
                                    Style="{StaticResource ShapeScheme}"
                                    Source="Shape/brick_scheme.svg"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="0" Text="{Binding Aspect.AreaShape.A}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaA}}"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="1" Text="{Binding Aspect.AreaShape.B}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaB}}"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="2" Text="{Binding Aspect.AreaShape.C}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaC}}"/>
                            </Grid>
                            <!--Sphere-->
                            <Grid RowDefinitions="auto,*" ColumnSpacing="10" IsVisible="{Binding IsSphere}">
                                <Image 
                                    Grid.Row="0"  
                                    Style="{StaticResource ShapeScheme}"
                                    Source="Shape/sphere_scheme.svg"/>
                                <controls:FramedEntry Grid.Row="1" Text="{Binding Aspect.AreaShape.R}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaR}}"/>
                            </Grid>
                            <!--Cylinder-->
                            <Grid RowDefinitions="auto,*" ColumnDefinitions="*,*" ColumnSpacing="10" IsVisible="{Binding IsCylinder}">
                                <Image 
                                    Grid.Row="0" Grid.ColumnSpan="2" 
                                    Style="{StaticResource ShapeScheme}"
                                    Source="Shape/cylinder_scheme.svg"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="0" Text="{Binding Aspect.AreaShape.H}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaH}}"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="1" Text="{Binding Aspect.AreaShape.R}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaR}}"/>
                            </Grid>
                            <!--Cone-->
                            <Grid RowDefinitions="auto,*" ColumnDefinitions="*,*" ColumnSpacing="10" IsVisible="{Binding IsCone}">
                                <Image 
                                    Grid.Row="0" Grid.ColumnSpan="2" 
                                    Style="{StaticResource ShapeScheme}"
                                    Source="Shape/cone_scheme.svg"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="0" Text="{Binding Aspect.AreaShape.H}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaH}}"/>
                                <controls:FramedEntry Grid.Row="1" Grid.Column="1" Text="{Binding Aspect.AreaShape.R}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaR}}"/>
                            </Grid>
                            <!--Voxel array-->
                            <Grid RowDefinitions="auto,*,auto,auto" ColumnSpacing="10" IsVisible="{Binding IsVoxelArray}">
                                <Image 
                                    Grid.Row="0" 
                                    Style="{StaticResource ShapeScheme}"
                                    Source="Shape/cross_scheme.svg"/>
                                <Label Grid.Row="1" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionVoxelHint}}" Margin="0,0,0,10"/>
                                <controls:FramedEntry Grid.Row="2" Text="{Binding Aspect.AreaShape.N}" Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaN}}"/>
                                <HorizontalStackLayout Grid.Row="3" Margin="0,10,0,0">
                                    <CheckBox IsChecked="{Binding Aspect.AreaShape.IsArbitrary}"/>
                                    <Label 
                                        VerticalOptions="Center"
                                        VerticalTextAlignment="Center"
                                        Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.VoxelArrayIsArbitrary}}"/>
                                </HorizontalStackLayout>
                            </Grid>
                        </Grid>
                    </VerticalStackLayout>
                </Border>
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsAREA}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.Obstacles}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaObstacleHint}}"/>
                        <controls:PickerButton
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaObstacleCharacterAndArea}}"
                            Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            ItemSource="{Binding Aspect.Obstacles}"
                            SelectedItem="{Binding Aspect.ObstacleBetweenCharacterAndArea}"
                            DisplayMember="LocalizedName"/>
                        <controls:PickerButton
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionAreaObstacleTargetAndEpicenter}}"
                            Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            ItemSource="{Binding Aspect.Obstacles}"
                            SelectedItem="{Binding Aspect.ObstacleBetweenEpicenterAndTarget}"
                            DisplayMember="LocalizedName"/>
                    </VerticalStackLayout>
                </Border>
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsAREA}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionExcludeTargets}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionEcludeTargetsHint}}"/>
                        <controls:FramedEntry Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionEcludeTargetsField}}" Text="{Binding Aspect.ExcludedTargetsCount}"/>
                    </VerticalStackLayout>
                </Border>
                <!--Chracter himself-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding IsCharacter}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyCharacter}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionStratedyCharacterHint}}"/>
                    </VerticalStackLayout>
                </Border>
                <!--Target chain-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding ShowNTADAndAREASettings}">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AspectTargetChain}}"/>
                        <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetChainHint}}"/>
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding Aspect.IsChainEnabled}"/>
                            <Label 
                                VerticalOptions="Center"
                                VerticalTextAlignment="Center"
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetChainEnable}}"/>
                        </HorizontalStackLayout>
                        <controls:FramedEntry 
                            Text="{Binding Aspect.MaxDistanceBetweenTargetsInChain}" 
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetChainMaxDistance}}"
                            IsVisible="{Binding Aspect.IsChainEnabled}"/>
                        <controls:FramedEntry 
                            Text="{Binding Aspect.MaxTargetsCountInChain}" 
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetChainMaxCount}}"
                            IsVisible="{Binding Aspect.IsChainEnabled}"/>
                        <Label 
                            Style="{StaticResource TitleLabel}" 
                            Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleBetweenTargetsInChain}}"
                            IsVisible="{Binding Aspect.IsChainEnabled}"/>
                        <Label 
                            Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetChainObstacleHint}}"
                            IsVisible="{Binding Aspect.IsChainEnabled}"/>
                        <controls:PickerButton
                            Placeholder="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            Title="{lcz:Translate Name={x:Static lcz:LocalizationKeys.ObstacleEquivalent}}"
                            ItemSource="{Binding Aspect.Obstacles}"
                            SelectedItem="{Binding Aspect.ObstacleBetweenTargetsInChain}"
                            DisplayMember="LocalizedName"
                            IsVisible="{Binding Aspect.IsChainEnabled}"/>
                    </VerticalStackLayout>
                </Border>
                <!--Target selection restriction-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding ShowNTADAndAREASettings}">
                    <Grid RowDefinitions="auto,auto,auto" RowSpacing="10">
                        <VerticalStackLayout Grid.Row="0" Spacing="10">
                            <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionRestriction}}"/>
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetSelectionRestrictionHint}}"/>
                        </VerticalStackLayout>
                        
                        <CollectionView 
                            Grid.Row="1" 
                            x:Name="restrictionsCollectionView" 
                            ItemsSource="{Binding Restrictions}"
                            IsVisible="{Binding ShowNoRestrictionsText, Converter={StaticResource NotConverter}}">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Vertical" ItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="vm:TargetSelectionRestrictionPropertyVM">
                                    <controls:BasicCollectionItem
                                        Text="{Binding Text}"
                                        DeleteCommand="{Binding Source={x:Reference restrictionsCollectionView}, Path= BindingContext.DeleteRestrictionCommand}"
                                        CommandParameter="{Binding}"/>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>

                        <VerticalStackLayout Grid.Row="2" Spacing="10">
                            <Label 
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TheTargetCanBeAnything}}"
                                Margin="0,0,0,5"
                                IsVisible="{Binding ShowNoRestrictionsText}"/>
                            <Button 
                                Style="{StaticResource LightButton}"
                                Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AddRestriction}}"
                                Command="{Binding AddRestrictionCommand}"
                                Margin="1"/>
                        </VerticalStackLayout>
                    </Grid>
                </Border>
                <!--Target size restriction-->
                <Border Style="{StaticResource BlockBorder}" IsVisible="{Binding ShowNTADAndAREASettings}">
                    <Grid RowDefinitions="auto,*,auto" RowSpacing="10">
                        <VerticalStackLayout Grid.Row="0" Spacing="10">
                            <Label Style="{StaticResource TitleLabel}" Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetsSizes}}"/>
                            <Label Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.TargetsSizesHint}}"/>
                        </VerticalStackLayout>

                        <CollectionView 
                            Grid.Row="1" 
                            x:Name="sizesCollectionView" 
                            ItemsSource="{Binding Sizes}"
                            IsVisible="{Binding ShowSizesCollection}">
                            <CollectionView.ItemsLayout>
                                <GridItemsLayout Orientation="Vertical" Span="2" VerticalItemSpacing="5" HorizontalItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="vm:TargetSizeVM">
                                    <controls:BasicCollectionItem
                                        Text="{Binding Text}"
                                        DeleteCommand="{Binding Source={x:Reference sizesCollectionView}, Path= BindingContext.DeleteSizeCommand}"
                                        CommandParameter="{Binding}"/>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <Button 
                            Grid.Row="2"
                            Style="{StaticResource LightButton}"
                            Text="{lcz:Translate Name={x:Static lcz:LocalizationKeys.AddSize}}"
                            Command="{Binding AddSizeCommand}"
                            Margin="1"/>
                    </Grid>
                </Border>
            </VerticalStackLayout>
        </ScrollView>
        <v:AbilityCostMonitorPanel
            Grid.Row="1"
            BindingContext="{Binding CostMonitor}"/>
    </Grid>
</ContentPage>