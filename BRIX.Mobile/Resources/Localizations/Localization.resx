<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abilities" xml:space="preserve">
    <value>Abilities</value>
  </data>
  <data name="AbilitiesListHelpText" xml:space="preserve">
    <value>Swipe right to edit and swipe left to delete.</value>
  </data>
  <data name="AbilityCost" xml:space="preserve">
    <value>Ability cost:</value>
  </data>
  <data name="AbilityName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ActionPointAspectHint" xml:space="preserve">
    <value>Almost any ability is used by spending action points. The more action points an ability spends, the cheaper it will be in experience points.</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="AddOrEditAbilityPageTitle_Add" xml:space="preserve">
    <value>Add ability</value>
  </data>
  <data name="AddOrEditAbilityPageTitle_Edit" xml:space="preserve">
    <value>Edit ability</value>
  </data>
  <data name="AddOrEditAbilityPageTitle_Upgrade" xml:space="preserve">
    <value>Upgrade ability</value>
  </data>
  <data name="AddOrEditCharacterPageTitle_Add" xml:space="preserve">
    <value>Add character</value>
  </data>
  <data name="AddOrEditCharacterPageTitle_Edit" xml:space="preserve">
    <value>Edit character</value>
  </data>
  <data name="Appearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="AspectActionPoints" xml:space="preserve">
    <value>Action points</value>
  </data>
  <data name="AspectObstacle" xml:space="preserve">
    <value>Obstacles</value>
  </data>
  <data name="Aspects" xml:space="preserve">
    <value>Aspects</value>
  </data>
  <data name="AspectTargetChain" xml:space="preserve">
    <value>Target chain</value>
  </data>
  <data name="AspectTargetSelection" xml:space="preserve">
    <value>Target selection</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Average:</value>
  </data>
  <data name="Backstory" xml:space="preserve">
    <value>Backstory</value>
  </data>
  <data name="BrickWall" xml:space="preserve">
    <value>Brick wall</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="Character" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="CharacterAbilitiesPageTitle" xml:space="preserve">
    <value>Abilities</value>
  </data>
  <data name="CharacterListPageTitle" xml:space="preserve">
    <value>Character list</value>
  </data>
  <data name="CharacterTab" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="CharacterTabAbilities" xml:space="preserve">
    <value>Abilities</value>
  </data>
  <data name="CharacterTabDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="CharacterTabInventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="CharListHelpText" xml:space="preserve">
    <value>Tap to select, swipe right to edit and swipe left to delete.</value>
  </data>
  <data name="ChooseLanguage" xml:space="preserve">
    <value>Choose the language</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CreateNewCharacter" xml:space="preserve">
    <value>Create new character</value>
  </data>
  <data name="CurrentCharacterPageTitle" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>Current language</value>
  </data>
  <data name="Damage" xml:space="preserve">
    <value>Damage</value>
  </data>
  <data name="DamageEffectCurrentAdjustment" xml:space="preserve">
    <value>Current (+0%)</value>
  </data>
  <data name="DamageEffectPageHint" xml:space="preserve">
    <value>Here is the set of dice or value you should use to decide how much damage your ability dealt.</value>
  </data>
  <data name="DeleteAbilityQuestion" xml:space="preserve">
    <value>Are you sure you want to delete the ability?</value>
  </data>
  <data name="DeleteCharacterQuestion" xml:space="preserve">
    <value>Are you sure you want to delete the character?</value>
  </data>
  <data name="DeleteEffectQuestion" xml:space="preserve">
    <value>Are you sure you want to delete the effect?</value>
  </data>
  <data name="DenseVegetation" xml:space="preserve">
    <value>Dense vegetation</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DiceValuePopupHint" xml:space="preserve">
    <value>Enter the value in the format commonly used for dice formulas. For example, 3d6 + 2d4 + 5. In such formulas, the number before «d» means the number of dice, the number after «d» - the number of faces on the dice of this type. You can use custom dice like d11 or d19 if you like.</value>
  </data>
  <data name="DiceValuePopupPlaceholder" xml:space="preserve">
    <value>Dice formula</value>
  </data>
  <data name="DiceValuePopupTitle" xml:space="preserve">
    <value>Dice value</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EffectDamage" xml:space="preserve">
    <value>Damage</value>
  </data>
  <data name="EffectHeal" xml:space="preserve">
    <value>Heal</value>
  </data>
  <data name="Effects" xml:space="preserve">
    <value>Effects</value>
  </data>
  <data name="EXP" xml:space="preserve">
    <value>EXP</value>
  </data>
  <data name="Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="ExperienceToLevelup" xml:space="preserve">
    <value>EXP to level up</value>
  </data>
  <data name="FastAdjustment" xml:space="preserve">
    <value>Fast adjustment</value>
  </data>
  <data name="FreeExperience" xml:space="preserve">
    <value>Free EXP</value>
  </data>
  <data name="Health" xml:space="preserve">
    <value>Health</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HideTooltip" xml:space="preserve">
    <value>Ok, hide message</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LeatherArmor" xml:space="preserve">
    <value>Leather armor</value>
  </data>
  <data name="LevelFormat" xml:space="preserve">
    <value>Level {0}</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="MetalArmor" xml:space="preserve">
    <value>Metal armor</value>
  </data>
  <data name="MuchMorePowerfullObstacle" xml:space="preserve">
    <value>Some very powerful obstacle</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>n/a</value>
  </data>
  <data name="ObstacleBetweenTargetsInChain" xml:space="preserve">
    <value>Obstacles between targets</value>
  </data>
  <data name="ObstacleEquivalent" xml:space="preserve">
    <value>Obstacle equivalent</value>
  </data>
  <data name="Obstacles" xml:space="preserve">
    <value>Obstacles</value>
  </data>
  <data name="PaperSheet" xml:space="preserve">
    <value>Paper sheet</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PlayerHaveNoCharacter" xml:space="preserve">
    <value>Looks like you haven't created any character yet. It is a good reason to create one. Fortunately, there is a button at the bottom of this page specifically for such cases.</value>
  </data>
  <data name="PlayerHaveNoCharacterTitle" xml:space="preserve">
    <value>Nothing...</value>
  </data>
  <data name="Portrait" xml:space="preserve">
    <value>Portrait</value>
  </data>
  <data name="PortraitHint" xml:space="preserve">
    <value>Click the «Browse» button and select a character image. You can customize the portrait by zooming in, zooming out and moving the image in the window below.</value>
  </data>
  <data name="PortraitSettings" xml:space="preserve">
    <value>Portrait settings</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectCharacterPortrait" xml:space="preserve">
    <value>Select character image</value>
  </data>
  <data name="SelectLanguagePageTitle" xml:space="preserve">
    <value>Select language</value>
  </data>
  <data name="Set" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsPageTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignInButton" xml:space="preserve">
    <value>Go</value>
  </data>
  <data name="SignInPageTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Spread" xml:space="preserve">
    <value>Spread:</value>
  </data>
  <data name="Strategy" xml:space="preserve">
    <value>Strategy</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Ability cost:</value>
  </data>
  <data name="Switch" xml:space="preserve">
    <value>Switch</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TargetChainEnable" xml:space="preserve">
    <value>Enable target chain</value>
  </data>
  <data name="TargetChainHint" xml:space="preserve">
    <value>Targets can form chains. This means that once an effect is applied to a target, it can also be applied to the next target at a given distance from the previous one, and so on. The effect can only be applied once to each target within the chain. The distance is indicated in meters. The maximum number of targets in a chain and the distance between targets is limited. The character himself chooses the order of the targets in the chain.</value>
  </data>
  <data name="TargetChainMaxCount" xml:space="preserve">
    <value>Max count of targets</value>
  </data>
  <data name="TargetChainMaxDistance" xml:space="preserve">
    <value>Max distance between targets</value>
  </data>
  <data name="TargetChainObstacleHint" xml:space="preserve">
    <value>The effect cannot be applied to the next target in the chain if there is an obstacle with the indicated durability equivalent or stronger between it and the previous target.</value>
  </data>
  <data name="TargetSelectionAreaA" xml:space="preserve">
    <value>Length (A)</value>
  </data>
  <data name="TargetSelectionAreaB" xml:space="preserve">
    <value>Width (B)</value>
  </data>
  <data name="TargetSelectionAreaC" xml:space="preserve">
    <value>Height (C)</value>
  </data>
  <data name="TargetSelectionAreaH" xml:space="preserve">
    <value>Height (H)</value>
  </data>
  <data name="TargetSelectionAreaN" xml:space="preserve">
    <value>Number of voxels (N)</value>
  </data>
  <data name="TargetSelectionAreaObstacleCharacterAndArea" xml:space="preserve">
    <value>Between character and area</value>
  </data>
  <data name="TargetSelectionAreaObstacleHint" xml:space="preserve">
    <value>The effect cannot be applied if there is an obstacle equal to or stronger than the selected equivalent in strength between the character and the nearest point of the area of ​​effect. Also, the effect cannot be applied to the target if there is an obstacle between it and the epicenter of the area of ​​effect that is equal in strength to the equivalent or stronger than it. The strength for these two types of obstacles is configured separately.</value>
  </data>
  <data name="TargetSelectionAreaObstacleTargetAndEpicenter" xml:space="preserve">
    <value>Between target and epicenter</value>
  </data>
  <data name="TargetSelectionAreaR" xml:space="preserve">
    <value>Radius (R)</value>
  </data>
  <data name="TargetSelectionEcludeTargetsField" xml:space="preserve">
    <value>Excluded targets count</value>
  </data>
  <data name="TargetSelectionEcludeTargetsHint" xml:space="preserve">
    <value>It is possible to fine-tune the area so that certain targets in the area selected by the character will not be affected. The more such targets a character can exclude, the more expensive the ability.</value>
  </data>
  <data name="TargetSelectionExcludeTargets" xml:space="preserve">
    <value>Exclude targets</value>
  </data>
  <data name="TargetSelectionIsRandom" xml:space="preserve">
    <value>Random target selection</value>
  </data>
  <data name="TargetSelectionIsRandomCheckBox" xml:space="preserve">
    <value>Target selection is random</value>
  </data>
  <data name="TargetSelectionIsRandomHint" xml:space="preserve">
    <value>If the random target selection mode is selected, then the player, when using the ability, will have to select a random target from those that satisfy the other conditions. This will complicate the planning of actions, but it will make the ability cheaper.</value>
  </data>
  <data name="TargetSelectionNTADObstacleHint" xml:space="preserve">
    <value>The effect cannot be applied to the target if there is an obstacle equal to or stronger than the equivalent durability between it and the character.</value>
  </data>
  <data name="TargetSelectionStratedyArea" xml:space="preserve">
    <value>All targets in area</value>
  </data>
  <data name="TargetSelectionStratedyAreaDistance" xml:space="preserve">
    <value>Distance to area in meters (D)</value>
  </data>
  <data name="TargetSelectionStratedyAreaHint" xml:space="preserve">
    <value>With this strategy, the effect is applied to targets located in the specified area. All area parameters are specified in meters. An area can be placed at any angle relative to the character, and the area distance is the distance from the character to the nearest point in that area.</value>
  </data>
  <data name="TargetSelectionStratedyCharacter" xml:space="preserve">
    <value>Character himself</value>
  </data>
  <data name="TargetSelectionStratedyCharacterHint" xml:space="preserve">
    <value>The target is the character himself.</value>
  </data>
  <data name="TargetSelectionStratedyNTAD" xml:space="preserve">
    <value>Multiple targets in the distance</value>
  </data>
  <data name="TargetSelectionStratedyNTADCount" xml:space="preserve">
    <value>Number of targets</value>
  </data>
  <data name="TargetSelectionStratedyNTADDistance" xml:space="preserve">
    <value>Distance in meters</value>
  </data>
  <data name="TargetSelectionStratedyNTADHint" xml:space="preserve">
    <value>With this strategy, the effect is applied to a limited number of targets that are no further than the set range.</value>
  </data>
  <data name="TargetSelectionStrategyHint" xml:space="preserve">
    <value>It is necessary to choose a target selection strategy, there are only two of them:</value>
  </data>
  <data name="TargetSelectionVoxelHint" xml:space="preserve">
    <value>A voxel is a 1x1 meter cube. From such voxels, you can make an array — the figure of the area in which the effect will be applied to the targets. In the picture an area of ​​five voxels is composed as an example.</value>
  </data>
  <data name="ThickSteelPlate" xml:space="preserve">
    <value>Thick steel plate</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WoodenPlank" xml:space="preserve">
    <value>Wooden plank</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>