//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRIX.Mobile.Resources.Localizations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BRIX.Mobile.Resources.Localizations.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string Abilities {
            get {
                return ResourceManager.GetString("Abilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swipe right to edit and swipe left to delete..
        /// </summary>
        public static string AbilitiesList_Help {
            get {
                return ResourceManager.GetString("AbilitiesList_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ability cost:.
        /// </summary>
        public static string AbilityCost {
            get {
                return ResourceManager.GetString("AbilityCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot save such parameters to the ability, as you do not have enough experience points for this. Weaken the ability or exit editing without saving using the back button in the top left corner..
        /// </summary>
        public static string AbilityEXPOverflowMessage {
            get {
                return ResourceManager.GetString("AbilityEXPOverflowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Almost any ability is used by spending action points. The more action points an ability spends, the cheaper it will be in experience points..
        /// </summary>
        public static string ActionPointAspectHint {
            get {
                return ResourceManager.GetString("ActionPointAspectHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate.
        /// </summary>
        public static string Activate {
            get {
                return ResourceManager.GetString("Activate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation condition.
        /// </summary>
        public static string ActivationCondition {
            get {
                return ResourceManager.GetString("ActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect will be applied only if all the specified conditions are met by the time the ability is activated..
        /// </summary>
        public static string ActivationConditionsHint {
            get {
                return ResourceManager.GetString("ActivationConditionsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Such activation condition already exists..
        /// </summary>
        public static string ActivationConditionWarning {
            get {
                return ResourceManager.GetString("ActivationConditionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add condition.
        /// </summary>
        public static string AddCondition {
            get {
                return ResourceManager.GetString("AddCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add health.
        /// </summary>
        public static string AddHealth {
            get {
                return ResourceManager.GetString("AddHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can increase the amount of health points your character has by pouring experience points into it. Be careful, the cost scale is progressive and the more experience you pour into health, the more expensive each health point will be..
        /// </summary>
        public static string AddHealthHint {
            get {
                return ResourceManager.GetString("AddHealthHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have no enough experience points to add that health points count to your character..
        /// </summary>
        public static string AddHealthNotEnoughExpAlert {
            get {
                return ResourceManager.GetString("AddHealthNotEnoughExpAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add item.
        /// </summary>
        public static string AddInventoryItem {
            get {
                return ResourceManager.GetString("AddInventoryItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional health.
        /// </summary>
        public static string AdditionalHealth {
            get {
                return ResourceManager.GetString("AdditionalHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Add {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Edit {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Upgrade {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add character.
        /// </summary>
        public static string AddOrEditCharacterPageTitle_Add {
            get {
                return ResourceManager.GetString("AddOrEditCharacterPageTitle_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit character.
        /// </summary>
        public static string AddOrEditCharacterPageTitle_Edit {
            get {
                return ResourceManager.GetString("AddOrEditCharacterPageTitle_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add project.
        /// </summary>
        public static string AddProject {
            get {
                return ResourceManager.GetString("AddProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add restriction.
        /// </summary>
        public static string AddRestriction {
            get {
                return ResourceManager.GetString("AddRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add size.
        /// </summary>
        public static string AddSize {
            get {
                return ResourceManager.GetString("AddSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add status.
        /// </summary>
        public static string AddStatus {
            get {
                return ResourceManager.GetString("AddStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string Appearance {
            get {
                return ResourceManager.GetString("Appearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area.
        /// </summary>
        public static string Area {
            get {
                return ResourceManager.GetString("Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjust?.
        /// </summary>
        public static string AskAdjust {
            get {
                return ResourceManager.GetString("AskAdjust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete contents of a container?.
        /// </summary>
        public static string AskDeleteContainerWithContent {
            get {
                return ResourceManager.GetString("AskDeleteContainerWithContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete «{0}» ability material support?.
        /// </summary>
        public static string AskDeleteMaterialSupport {
            get {
                return ResourceManager.GetString("AskDeleteMaterialSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete project «{0}»?.
        /// </summary>
        public static string AskDeleteProject {
            get {
                return ResourceManager.GetString("AskDeleteProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete status «{0}»?.
        /// </summary>
        public static string AskDeleteStatus {
            get {
                return ResourceManager.GetString("AskDeleteStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete «{0}»?.
        /// </summary>
        public static string AskToDeleteInventoryItem {
            get {
                return ResourceManager.GetString("AskToDeleteInventoryItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action points.
        /// </summary>
        public static string AspectActionPoints {
            get {
                return ResourceManager.GetString("AspectActionPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation conditions.
        /// </summary>
        public static string AspectActivationConditions {
            get {
                return ResourceManager.GetString("AspectActivationConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cooldown.
        /// </summary>
        public static string AspectCooldown {
            get {
                return ResourceManager.GetString("AspectCooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles.
        /// </summary>
        public static string AspectObstacle {
            get {
                return ResourceManager.GetString("AspectObstacle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration.
        /// </summary>
        public static string AspectRoundDuration {
            get {
                return ResourceManager.GetString("AspectRoundDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aspects.
        /// </summary>
        public static string Aspects {
            get {
                return ResourceManager.GetString("Aspects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target chain.
        /// </summary>
        public static string AspectTargetChain {
            get {
                return ResourceManager.GetString("AspectTargetChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection.
        /// </summary>
        public static string AspectTargetSelection {
            get {
                return ResourceManager.GetString("AspectTargetSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average:.
        /// </summary>
        public static string Average {
            get {
                return ResourceManager.GetString("Average", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backstory.
        /// </summary>
        public static string Backstory {
            get {
                return ResourceManager.GetString("Backstory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be alive.
        /// </summary>
        public static string BeAlive {
            get {
                return ResourceManager.GetString("BeAlive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be an object.
        /// </summary>
        public static string BeAnObject {
            get {
                return ResourceManager.GetString("BeAnObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be viable.
        /// </summary>
        public static string BeViable {
            get {
                return ResourceManager.GetString("BeViable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Big.
        /// </summary>
        public static string Big {
            get {
                return ResourceManager.GetString("Big", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brick wall.
        /// </summary>
        public static string BrickWall {
            get {
                return ResourceManager.GetString("BrickWall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse....
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not rechargeable (single use).
        /// </summary>
        public static string CannotReset {
            get {
                return ResourceManager.GetString("CannotReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change language.
        /// </summary>
        public static string ChangeLanguage {
            get {
                return ResourceManager.GetString("ChangeLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string Character {
            get {
                return ResourceManager.GetString("Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string CharacterAbilitiesPageTitle {
            get {
                return ResourceManager.GetString("CharacterAbilitiesPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can the character cancel the effect?.
        /// </summary>
        public static string CharacterCanDisableEffect {
            get {
                return ResourceManager.GetString("CharacterCanDisableEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an option when a character can cancel a long-term effect (status) that he himself created without spending resources, but this option increases the cost of the ability..
        /// </summary>
        public static string CharacterCanDisableEffectHint {
            get {
                return ResourceManager.GetString("CharacterCanDisableEffectHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string CharacterDetails {
            get {
                return ResourceManager.GetString("CharacterDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character health.
        /// </summary>
        public static string CharacterHealth {
            get {
                return ResourceManager.GetString("CharacterHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap to select, swipe right to edit and swipe left to delete..
        /// </summary>
        public static string CharacterList_Help {
            get {
                return ResourceManager.GetString("CharacterList_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character list.
        /// </summary>
        public static string CharacterListPageTitle {
            get {
                return ResourceManager.GetString("CharacterListPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To edit a status, slide the status card to the right; to delete, slide it to the left..
        /// </summary>
        public static string CharacterStatusesPageHelp {
            get {
                return ResourceManager.GetString("CharacterStatusesPageHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string CharacterTab {
            get {
                return ResourceManager.GetString("CharacterTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string CharacterTabAbilities {
            get {
                return ResourceManager.GetString("CharacterTabAbilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string CharacterTabDetails {
            get {
                return ResourceManager.GetString("CharacterTabDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory.
        /// </summary>
        public static string CharacterTabInventory {
            get {
                return ResourceManager.GetString("CharacterTabInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the language.
        /// </summary>
        public static string ChooseLanguage {
            get {
                return ResourceManager.GetString("ChooseLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coins.
        /// </summary>
        public static string Coins {
            get {
                return ResourceManager.GetString("Coins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colossal.
        /// </summary>
        public static string Colossal {
            get {
                return ResourceManager.GetString("Colossal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string CommonDescription {
            get {
                return ResourceManager.GetString("CommonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string CommonName {
            get {
                return ResourceManager.GetString("CommonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consumable.
        /// </summary>
        public static string Consumable {
            get {
                return ResourceManager.GetString("Consumable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container.
        /// </summary>
        public static string Container {
            get {
                return ResourceManager.GetString("Container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cooldown.
        /// </summary>
        public static string Cooldown {
            get {
                return ResourceManager.GetString("Cooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify how long it takes for the ability to recharge and be able to use it again. You can also choose the number of times you can use the ability before it needs a cooldown..
        /// </summary>
        public static string CooldownAspectHint {
            get {
                return ResourceManager.GetString("CooldownAspectHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count.
        /// </summary>
        public static string Count {
            get {
                return ResourceManager.GetString("Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pcs..
        /// </summary>
        public static string CountPostfix {
            get {
                return ResourceManager.GetString("CountPostfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new character.
        /// </summary>
        public static string CreateNewCharacter {
            get {
                return ResourceManager.GetString("CreateNewCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From ability....
        /// </summary>
        public static string CreateStatusFromAbility {
            get {
                return ResourceManager.GetString("CreateStatusFromAbility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current (+0%).
        /// </summary>
        public static string CurrentAdjustment {
            get {
                return ResourceManager.GetString("CurrentAdjustment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string CurrentCharacterPageTitle {
            get {
                return ResourceManager.GetString("CurrentCharacterPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current language.
        /// </summary>
        public static string CurrentLanguage {
            get {
                return ResourceManager.GetString("CurrentLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        public static string Damage {
            get {
                return ResourceManager.GetString("Damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is the set of dice or value you should use to decide how much damage your ability dealt..
        /// </summary>
        public static string DamageEffectPageHint {
            get {
                return ResourceManager.GetString("DamageEffectPageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day.
        /// </summary>
        public static string Day {
            get {
                return ResourceManager.GetString("Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the ability?.
        /// </summary>
        public static string DeleteAbilityQuestion {
            get {
                return ResourceManager.GetString("DeleteAbilityQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the character?.
        /// </summary>
        public static string DeleteCharacterQuestion {
            get {
                return ResourceManager.GetString("DeleteCharacterQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the effect?.
        /// </summary>
        public static string DeleteEffectQuestion {
            get {
                return ResourceManager.GetString("DeleteEffectQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dense vegetation.
        /// </summary>
        public static string DenseVegetation {
            get {
                return ResourceManager.GetString("DenseVegetation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The formula is empty, to add elements to the formula, click the «Edit» button..
        /// </summary>
        public static string DicePoolEditorNoDices {
            get {
                return ResourceManager.GetString("DicePoolEditorNoDices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the value in the format commonly used for dice formulas. For example, 3d6 + 2d4 + 5. In such formulas, the number before «d» means the number of dice, the number after «d» - the number of faces on the dice of this type. You can use custom dice like d11 or d19 if you like..
        /// </summary>
        public static string DiceValuePopupHint {
            get {
                return ResourceManager.GetString("DiceValuePopupHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dice formula.
        /// </summary>
        public static string DiceValuePopupPlaceholder {
            get {
                return ResourceManager.GetString("DiceValuePopupPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dice value.
        /// </summary>
        public static string DiceValuePopupTitle {
            get {
                return ResourceManager.GetString("DiceValuePopupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low difficulty condition.
        /// </summary>
        public static string EasyActivationCondition {
            get {
                return ResourceManager.GetString("EasyActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add an effect, click the big plus button in the effects list. To remove an effect, slide its card to the left, to edit it, move it to the right. If the ability has material support, you can remove its element with a double tap..
        /// </summary>
        public static string EditAbility_Help {
            get {
                return ResourceManager.GetString("EditAbility_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit item.
        /// </summary>
        public static string EditInventoryItem {
            get {
                return ResourceManager.GetString("EditInventoryItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit project.
        /// </summary>
        public static string EditProject {
            get {
                return ResourceManager.GetString("EditProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit status.
        /// </summary>
        public static string EditStatus {
            get {
                return ResourceManager.GetString("EditStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        public static string EffectDamage {
            get {
                return ResourceManager.GetString("EffectDamage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exhaustion.
        /// </summary>
        public static string EffectExhaustion {
            get {
                return ResourceManager.GetString("EffectExhaustion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fortify.
        /// </summary>
        public static string EffectFortify {
            get {
                return ResourceManager.GetString("EffectFortify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heal.
        /// </summary>
        public static string EffectHeal {
            get {
                return ResourceManager.GetString("EffectHeal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects.
        /// </summary>
        public static string Effects {
            get {
                return ResourceManager.GetString("Effects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win.
        /// </summary>
        public static string EffectWin {
            get {
                return ResourceManager.GetString("EffectWin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a condition that is difficult to reproduce or a condition of high rarity. For example, a shooting star in the field of view, a specific day of the year, a volcanic eruption nearby, etc..
        /// </summary>
        public static string EnterHardActiovationCondition {
            get {
                return ResourceManager.GetString("EnterHardActiovationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a sign of high rarity, continuing the sentence: &quot;Target...&quot;. For example: &quot;Must have a tattoo&quot;, &quot;Must be a dragon&quot;, &quot;Must be born in June&quot;..
        /// </summary>
        public static string EnterHighRarityRestriction {
            get {
                return ResourceManager.GetString("EnterHighRarityRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify an easily reproducible condition or a condition of low rarity. For example, a specific time of day, the presence of a visible sky, the proximity of vessels with liquids, the presence of smooth vertical surfaces, the obligatory sound of music, activation only in the dark, etc..
        /// </summary>
        public static string EnterLowActivationCondition {
            get {
                return ResourceManager.GetString("EnterLowActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a low rarity property, continuing the sentence: &quot;Target...&quot;. For example: &quot;Must be female&quot;, &quot;Must be an elf&quot;, &quot;Must have a soul&quot;, &quot;Must be made of wood&quot;..
        /// </summary>
        public static string EnterLowRarityRestriction {
            get {
                return ResourceManager.GetString("EnterLowRarityRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate a condition that is difficult to reproduce or a condition of medium rarity. For example, rain, full moon, activation only under water, etc..
        /// </summary>
        public static string EnterMediumActiovationCondition {
            get {
                return ResourceManager.GetString("EnterMediumActiovationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a sign of medium rarity, continuing the sentence: Target...&quot;. For example: “Must be in armor”, “Must be in water”, “Must breathe”..
        /// </summary>
        public static string EnterMediumRarityRestriction {
            get {
                return ResourceManager.GetString("EnterMediumRarityRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment.
        /// </summary>
        public static string Equipment {
            get {
                return ResourceManager.GetString("Equipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporarily decreases the target&apos;s maximum health. The cost scale is progressive and depends on the amount by which health is increased. The amount by which health is reduced can be determined by rolling the dice..
        /// </summary>
        public static string ExhaustionEffectPageHint {
            get {
                return ResourceManager.GetString("ExhaustionEffectPageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXP.
        /// </summary>
        public static string EXP {
            get {
                return ResourceManager.GetString("EXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience.
        /// </summary>
        public static string Experience {
            get {
                return ResourceManager.GetString("Experience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience left: {0}.
        /// </summary>
        public static string ExperienceLeft {
            get {
                return ResourceManager.GetString("ExperienceLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience overall: {0}.
        /// </summary>
        public static string ExperienceOverall {
            get {
                return ResourceManager.GetString("ExperienceOverall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience.
        /// </summary>
        public static string ExperienceToLevelup {
            get {
                return ResourceManager.GetString("ExperienceToLevelup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast adjustment.
        /// </summary>
        public static string FastAdjustment {
            get {
                return ResourceManager.GetString("FastAdjustment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporarily increases the target&apos;s maximum health. The cost scale is progressive and depends on the amount by which health is increased. The number of bonus health points can be determined by rolling the dice..
        /// </summary>
        public static string FortifyEffectPageHint {
            get {
                return ResourceManager.GetString("FortifyEffectPageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free EXP.
        /// </summary>
        public static string FreeExperience {
            get {
                return ResourceManager.GetString("FreeExperience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gigantic.
        /// </summary>
        public static string Gigantic {
            get {
                return ResourceManager.GetString("Gigantic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hard difficulty condition.
        /// </summary>
        public static string HardActivationCondition {
            get {
                return ResourceManager.GetString("HardActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character have no active statuses..
        /// </summary>
        public static string HaveNoActiveStatuses {
            get {
                return ResourceManager.GetString("HaveNoActiveStatuses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heal.
        /// </summary>
        public static string Heal {
            get {
                return ResourceManager.GetString("Heal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each time you use the ability, roll the set of dice listed below to determine how many health points the ability restored..
        /// </summary>
        public static string HealDiceImpactHint {
            get {
                return ResourceManager.GetString("HealDiceImpactHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health.
        /// </summary>
        public static string Health {
            get {
                return ResourceManager.GetString("Health", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spend all EXP.
        /// </summary>
        public static string HealthSpentAllExp {
            get {
                return ResourceManager.GetString("HealthSpentAllExp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spent exp.
        /// </summary>
        public static string HealthSpentExp {
            get {
                return ResourceManager.GetString("HealthSpentExp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be heard.
        /// </summary>
        public static string HearTarget {
            get {
                return ResourceManager.GetString("HearTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok, hide message.
        /// </summary>
        public static string HideTooltip {
            get {
                return ResourceManager.GetString("HideTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have an high rarity property.
        /// </summary>
        public static string HighRarityProperty {
            get {
                return ResourceManager.GetString("HighRarityProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hour.
        /// </summary>
        public static string Hour {
            get {
                return ResourceManager.GetString("Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Huge.
        /// </summary>
        public static string Huge {
            get {
                return ResourceManager.GetString("Huge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 years.
        /// </summary>
        public static string HundredYears {
            get {
                return ResourceManager.GetString("HundredYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory.
        /// </summary>
        public static string Inventory {
            get {
                return ResourceManager.GetString("Inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap an item in your inventory to edit it, double tap to delete it, or swipe on the item name from left to right to open the description. By swiping an element from right to left, you can change its quantity..
        /// </summary>
        public static string Inventory_Help {
            get {
                return ResourceManager.GetString("Inventory_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some abilities depend on this supply, if you remove it, they will take more experience points. Delete?.
        /// </summary>
        public static string InventoryAbilitiesWillRisePrice {
            get {
                return ResourceManager.GetString("InventoryAbilitiesWillRisePrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have changed the cost of the item and can adjust the amount of coins available to the character according to the new value..
        /// </summary>
        public static string InventoryAdjustCoinsHint {
            get {
                return ResourceManager.GetString("InventoryAdjustCoinsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have changed the number of consumables and can automatically adjust the number of coins available to the character according to the new value. Adjust?.
        /// </summary>
        public static string InventoryAskAdjustCoinsAlert {
            get {
                return ResourceManager.GetString("InventoryAskAdjustCoinsAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cost in coins.
        /// </summary>
        public static string InventoryItemCost {
            get {
                return ResourceManager.GetString("InventoryItemCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is the equipment available to the character?.
        /// </summary>
        public static string InventoryItemIsAvailiable {
            get {
                return ResourceManager.GetString("InventoryItemIsAvailiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object properties.
        /// </summary>
        public static string InventoryItemProperties {
            get {
                return ResourceManager.GetString("InventoryItemProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object type.
        /// </summary>
        public static string InventoryItemType {
            get {
                return ResourceManager.GetString("InventoryItemType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The editing item was a container and contained other items. Its type has changed and now it cannot store its content, delete this content?.
        /// </summary>
        public static string InventoryItemWasConatinerAlert {
            get {
                return ResourceManager.GetString("InventoryItemWasConatinerAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have enough coins in your inventory to store this item. Change the cost of the item or turn off the «Adjust» flag so that the cost of the item does not affect the number of coins in the inventory..
        /// </summary>
        public static string InventoryNotEnoughCoinsAlert {
            get {
                return ResourceManager.GetString("InventoryNotEnoughCoinsAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some abilities depend on this material support and the character does not have enough experience points to apply such changes..
        /// </summary>
        public static string InventoryNotEnoughEXPForChanges {
            get {
                return ResourceManager.GetString("InventoryNotEnoughEXPForChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will run out of experience points for your current abilities if you remove this item. First, edit the abilities dependent on this item or remove them..
        /// </summary>
        public static string InventoryNotEnoughEXPForDelete {
            get {
                return ResourceManager.GetString("InventoryNotEnoughEXPForDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an item with the same name in the inventory..
        /// </summary>
        public static string InventorySameNameAlert {
            get {
                return ResourceManager.GetString("InventorySameNameAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string ItemName {
            get {
                return ResourceManager.GetString("ItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leather armor.
        /// </summary>
        public static string LeatherArmor {
            get {
                return ResourceManager.GetString("LeatherArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legendary.
        /// </summary>
        public static string Legendary {
            get {
                return ResourceManager.GetString("Legendary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level {0}.
        /// </summary>
        public static string LevelFormat {
            get {
                return ResourceManager.GetString("LevelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        public static string Login {
            get {
                return ResourceManager.GetString("Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have an low rarity property.
        /// </summary>
        public static string LowRarityProperty {
            get {
                return ResourceManager.GetString("LowRarityProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark of fate.
        /// </summary>
        public static string MarkOfFate {
            get {
                return ResourceManager.GetString("MarkOfFate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the mark of fate assigned to you by the game master..
        /// </summary>
        public static string MarkOfFateHint {
            get {
                return ResourceManager.GetString("MarkOfFateHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Marks of fate.
        /// </summary>
        public static string MarksOfFate {
            get {
                return ResourceManager.GetString("MarksOfFate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Material support.
        /// </summary>
        public static string MaterialSupport {
            get {
                return ResourceManager.GetString("MaterialSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium.
        /// </summary>
        public static string Medium {
            get {
                return ResourceManager.GetString("Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium difficulty condition.
        /// </summary>
        public static string MediumActivationCondition {
            get {
                return ResourceManager.GetString("MediumActivationCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have an medium rarity property.
        /// </summary>
        public static string MediumRarityProperty {
            get {
                return ResourceManager.GetString("MediumRarityProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metal armor.
        /// </summary>
        public static string MetalArmor {
            get {
                return ResourceManager.GetString("MetalArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miniature.
        /// </summary>
        public static string Miniature {
            get {
                return ResourceManager.GetString("Miniature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minute.
        /// </summary>
        public static string Minute {
            get {
                return ResourceManager.GetString("Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monstrous.
        /// </summary>
        public static string Monstrous {
            get {
                return ResourceManager.GetString("Monstrous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Month.
        /// </summary>
        public static string Month {
            get {
                return ResourceManager.GetString("Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some very powerful obstacle.
        /// </summary>
        public static string MuchMorePowerfullObstacle {
            get {
                return ResourceManager.GetString("MuchMorePowerfullObstacle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character can talk.
        /// </summary>
        public static string NeedToAbleToTalk {
            get {
                return ResourceManager.GetString("NeedToAbleToTalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character can move freely.
        /// </summary>
        public static string NeedToMove {
            get {
                return ResourceManager.GetString("NeedToMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Сharacter can move with one hand.
        /// </summary>
        public static string NeedToMoveArm {
            get {
                return ResourceManager.GetString("NeedToMoveArm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Сharacter can move with both hands.
        /// </summary>
        public static string NeedToMoveBothArms {
            get {
                return ResourceManager.GetString("NeedToMoveBothArms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character health:.
        /// </summary>
        public static string NewCharacterHealth {
            get {
                return ResourceManager.GetString("NewCharacterHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to n/a.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No cooldown.
        /// </summary>
        public static string NoneCooldown {
            get {
                return ResourceManager.GetString("NoneCooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no special activation conditions..
        /// </summary>
        public static string NoSpecialActivationConditions {
            get {
                return ResourceManager.GetString("NoSpecialActivationConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough experience points!.
        /// </summary>
        public static string NotEnoughEXP {
            get {
                return ResourceManager.GetString("NotEnoughEXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles between targets.
        /// </summary>
        public static string ObstacleBetweenTargetsInChain {
            get {
                return ResourceManager.GetString("ObstacleBetweenTargetsInChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacle equivalent.
        /// </summary>
        public static string ObstacleEquivalent {
            get {
                return ResourceManager.GetString("ObstacleEquivalent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles.
        /// </summary>
        public static string Obstacles {
            get {
                return ResourceManager.GetString("Obstacles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paper sheet.
        /// </summary>
        public static string PaperSheet {
            get {
                return ResourceManager.GetString("PaperSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks like you haven&apos;t created any character yet. It is a good reason to create one. Fortunately, there is a button at the bottom of this page specifically for such cases..
        /// </summary>
        public static string PlayerHaveNoCharacter {
            get {
                return ResourceManager.GetString("PlayerHaveNoCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing....
        /// </summary>
        public static string PlayerHaveNoCharacterTitle {
            get {
                return ResourceManager.GetString("PlayerHaveNoCharacterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portrait.
        /// </summary>
        public static string Portrait {
            get {
                return ResourceManager.GetString("Portrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the «Browse» button and select a character image. You can customize the portrait by zooming in, zooming out and moving the image in the window below..
        /// </summary>
        public static string PortraitHint {
            get {
                return ResourceManager.GetString("PortraitHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portrait settings.
        /// </summary>
        public static string PortraitSettings {
            get {
                return ResourceManager.GetString("PortraitSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        public static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps completed.
        /// </summary>
        public static string ProjectCurrentSteps {
            get {
                return ResourceManager.GetString("ProjectCurrentSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projects.
        /// </summary>
        public static string Projects {
            get {
                return ResourceManager.GetString("Projects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character projects are affairs for which progress needs to be tracked. To add a project, tap the plus sign button below. To edit a project, swipe the project card to the right; to delete it, swipe it to the left. To open the project description tap on its name. To increase the progress by one step tap the round progress bar or double tap to decrease it..
        /// </summary>
        public static string ProjectsHelp {
            get {
                return ResourceManager.GetString("ProjectsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps count.
        /// </summary>
        public static string ProjectSteps {
            get {
                return ResourceManager.GetString("ProjectSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember me.
        /// </summary>
        public static string RememberMe {
            get {
                return ResourceManager.GetString("RememberMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Round.
        /// </summary>
        public static string Round {
            get {
                return ResourceManager.GetString("Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration in rounds.
        /// </summary>
        public static string RoundDuration {
            get {
                return ResourceManager.GetString("RoundDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can specify the number of rounds for which the effect will last..
        /// </summary>
        public static string RoundDurationHint {
            get {
                return ResourceManager.GetString("RoundDurationHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rounds count.
        /// </summary>
        public static string RoundsCount {
            get {
                return ResourceManager.GetString("RoundsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} rounds.
        /// </summary>
        public static string RoundsLeft {
            get {
                return ResourceManager.GetString("RoundsLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A project with the same name already exists..
        /// </summary>
        public static string SameProjectExistsWarning {
            get {
                return ResourceManager.GetString("SameProjectExistsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be seen.
        /// </summary>
        public static string SeeTarget {
            get {
                return ResourceManager.GetString("SeeTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select character image.
        /// </summary>
        public static string SelectCharacterPortrait {
            get {
                return ResourceManager.GetString("SelectCharacterPortrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select language.
        /// </summary>
        public static string SelectLanguagePageTitle {
            get {
                return ResourceManager.GetString("SelectLanguagePageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string Set {
            get {
                return ResourceManager.GetString("Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsPageTitle {
            get {
                return ResourceManager.GetString("SettingsPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign In.
        /// </summary>
        public static string SignIn {
            get {
                return ResourceManager.GetString("SignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go.
        /// </summary>
        public static string SignInButton {
            get {
                return ResourceManager.GetString("SignInButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign In.
        /// </summary>
        public static string SignInPageTitle {
            get {
                return ResourceManager.GetString("SignInPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Small.
        /// </summary>
        public static string Small {
            get {
                return ResourceManager.GetString("Small", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread:.
        /// </summary>
        public static string Spread {
            get {
                return ResourceManager.GetString("Spread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statuses.
        /// </summary>
        public static string Statuses {
            get {
                return ResourceManager.GetString("Statuses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status name.
        /// </summary>
        public static string StatusName {
            get {
                return ResourceManager.GetString("StatusName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strategy.
        /// </summary>
        public static string Strategy {
            get {
                return ResourceManager.GetString("Strategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch.
        /// </summary>
        public static string Switch {
            get {
                return ResourceManager.GetString("Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable target chain.
        /// </summary>
        public static string TargetChainEnable {
            get {
                return ResourceManager.GetString("TargetChainEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets can form chains. This means that once an effect is applied to a target, it can also be applied to the next target at a given distance from the previous one, and so on. The effect can only be applied once to each target within the chain. The distance is indicated in meters. The maximum number of targets in a chain and the distance between targets is limited. The character himself chooses the order of the targets in the chain..
        /// </summary>
        public static string TargetChainHint {
            get {
                return ResourceManager.GetString("TargetChainHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max count of targets.
        /// </summary>
        public static string TargetChainMaxCount {
            get {
                return ResourceManager.GetString("TargetChainMaxCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max distance between targets.
        /// </summary>
        public static string TargetChainMaxDistance {
            get {
                return ResourceManager.GetString("TargetChainMaxDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied to the next target in the chain if there is an obstacle with the indicated durability equivalent or stronger between it and the previous target..
        /// </summary>
        public static string TargetChainObstacleHint {
            get {
                return ResourceManager.GetString("TargetChainObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must hear the character.
        /// </summary>
        public static string TargetHearsCharacter {
            get {
                return ResourceManager.GetString("TargetHearsCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target property.
        /// </summary>
        public static string TargetProperty {
            get {
                return ResourceManager.GetString("TargetProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must see the character.
        /// </summary>
        public static string TargetSeesCharacter {
            get {
                return ResourceManager.GetString("TargetSeesCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length (A).
        /// </summary>
        public static string TargetSelectionAreaA {
            get {
                return ResourceManager.GetString("TargetSelectionAreaA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width (B).
        /// </summary>
        public static string TargetSelectionAreaB {
            get {
                return ResourceManager.GetString("TargetSelectionAreaB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (C).
        /// </summary>
        public static string TargetSelectionAreaC {
            get {
                return ResourceManager.GetString("TargetSelectionAreaC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (H).
        /// </summary>
        public static string TargetSelectionAreaH {
            get {
                return ResourceManager.GetString("TargetSelectionAreaH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of voxels (N).
        /// </summary>
        public static string TargetSelectionAreaN {
            get {
                return ResourceManager.GetString("TargetSelectionAreaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Between character and area.
        /// </summary>
        public static string TargetSelectionAreaObstacleCharacterAndArea {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleCharacterAndArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied if there is an obstacle equal to or stronger than the selected equivalent in strength between the character and the nearest point of the area of ​​effect. Also, the effect cannot be applied to the target if there is an obstacle between it and the epicenter of the area of ​​effect that is equal in strength to the equivalent or stronger than it. The strength for these two types of obstacles is configured separately..
        /// </summary>
        public static string TargetSelectionAreaObstacleHint {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Between target and epicenter.
        /// </summary>
        public static string TargetSelectionAreaObstacleTargetAndEpicenter {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleTargetAndEpicenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radius (R).
        /// </summary>
        public static string TargetSelectionAreaR {
            get {
                return ResourceManager.GetString("TargetSelectionAreaR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excluded targets count.
        /// </summary>
        public static string TargetSelectionEcludeTargetsField {
            get {
                return ResourceManager.GetString("TargetSelectionEcludeTargetsField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is possible to fine-tune the area so that certain targets in the area selected by the character will not be affected. The more such targets a character can exclude, the more expensive the ability..
        /// </summary>
        public static string TargetSelectionEcludeTargetsHint {
            get {
                return ResourceManager.GetString("TargetSelectionEcludeTargetsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude targets.
        /// </summary>
        public static string TargetSelectionExcludeTargets {
            get {
                return ResourceManager.GetString("TargetSelectionExcludeTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random target selection.
        /// </summary>
        public static string TargetSelectionIsRandom {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection is random.
        /// </summary>
        public static string TargetSelectionIsRandomCheckBox {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandomCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the random target selection mode is selected, then the player, when using the ability, will have to select a random target from those that satisfy the other conditions. This will complicate the planning of actions, but it will make the ability cheaper..
        /// </summary>
        public static string TargetSelectionIsRandomHint {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandomHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied to the target if there is an obstacle equal to or stronger than the equivalent durability between it and the character..
        /// </summary>
        public static string TargetSelectionNTADObstacleHint {
            get {
                return ResourceManager.GetString("TargetSelectionNTADObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection restriction.
        /// </summary>
        public static string TargetSelectionRestriction {
            get {
                return ResourceManager.GetString("TargetSelectionRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ability will only work on targets that match the specified properties. The target....
        /// </summary>
        public static string TargetSelectionRestrictionHint {
            get {
                return ResourceManager.GetString("TargetSelectionRestrictionHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Such restriction type already added..
        /// </summary>
        public static string TargetSelectionRestrictionWarning {
            get {
                return ResourceManager.GetString("TargetSelectionRestrictionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All targets in area.
        /// </summary>
        public static string TargetSelectionStratedyArea {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance to area in meters (D).
        /// </summary>
        public static string TargetSelectionStratedyAreaDistance {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyAreaDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to targets located in the specified area. All area parameters are specified in meters. An area can be placed at any angle relative to the character, and the area distance is the distance from the character to the nearest point in that area..
        /// </summary>
        public static string TargetSelectionStratedyAreaHint {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyAreaHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character himself.
        /// </summary>
        public static string TargetSelectionStratedyCharacter {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target is the character himself..
        /// </summary>
        public static string TargetSelectionStratedyCharacterHint {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyCharacterHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple targets in the distance.
        /// </summary>
        public static string TargetSelectionStratedyNTAD {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of targets.
        /// </summary>
        public static string TargetSelectionStratedyNTADCount {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance in meters.
        /// </summary>
        public static string TargetSelectionStratedyNTADDistance {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to a limited number of targets that are no further than the set range..
        /// </summary>
        public static string TargetSelectionStratedyNTADHint {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is necessary to choose a target selection strategy, there are only two of them:.
        /// </summary>
        public static string TargetSelectionStrategyHint {
            get {
                return ResourceManager.GetString("TargetSelectionStrategyHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A voxel is a 1x1 meter cube. From such voxels, you can make an array — the figure of the area in which the effect will be applied to the targets. In the picture an area of ​​five voxels is composed as an example..
        /// </summary>
        public static string TargetSelectionVoxelHint {
            get {
                return ResourceManager.GetString("TargetSelectionVoxelHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets sizes.
        /// </summary>
        public static string TargetsSizes {
            get {
                return ResourceManager.GetString("TargetsSizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the size of the targets that the ability will affect. The ability cannot be cast on targets of any other size category..
        /// </summary>
        public static string TargetsSizesHint {
            get {
                return ResourceManager.GetString("TargetsSizesHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target....
        /// </summary>
        public static string TargetThreeDot {
            get {
                return ResourceManager.GetString("TargetThreeDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 10 years.
        /// </summary>
        public static string TenYears {
            get {
                return ResourceManager.GetString("TenYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target....
        /// </summary>
        public static string TheTarget {
            get {
                return ResourceManager.GetString("TheTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can be anybody or anything..
        /// </summary>
        public static string TheTargetCanBeAnything {
            get {
                return ResourceManager.GetString("TheTargetCanBeAnything", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thick steel plate.
        /// </summary>
        public static string ThickSteelPlate {
            get {
                return ResourceManager.GetString("ThickSteelPlate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thing.
        /// </summary>
        public static string Thing {
            get {
                return ResourceManager.GetString("Thing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tiny.
        /// </summary>
        public static string Tiny {
            get {
                return ResourceManager.GetString("Tiny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Titanic.
        /// </summary>
        public static string Titanic {
            get {
                return ResourceManager.GetString("Titanic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uses count.
        /// </summary>
        public static string UsesCount {
            get {
                return ResourceManager.GetString("UsesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Week.
        /// </summary>
        public static string Week {
            get {
                return ResourceManager.GetString("Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This effect allows you to win the BRIX game. Instantly and irrevocably. The additional effect of this effect can be discussed within each specific party of players separately..
        /// </summary>
        public static string WinEffectPageHint {
            get {
                return ResourceManager.GetString("WinEffectPageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wooden plank.
        /// </summary>
        public static string WoodenPlank {
            get {
                return ResourceManager.GetString("WoodenPlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Year.
        /// </summary>
        public static string Year {
            get {
                return ResourceManager.GetString("Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
