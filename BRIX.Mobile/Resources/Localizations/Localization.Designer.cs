//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRIX.Mobile.Resources.Localizations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BRIX.Mobile.Resources.Localizations.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string Abilities {
            get {
                return ResourceManager.GetString("Abilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap arrow up to upgrade, swipe right to edit and swipe left to delete..
        /// </summary>
        public static string AbilitiesListHelpText {
            get {
                return ResourceManager.GetString("AbilitiesListHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ability cost:.
        /// </summary>
        public static string AbilityCost {
            get {
                return ResourceManager.GetString("AbilityCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string AbilityName {
            get {
                return ResourceManager.GetString("AbilityName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Almost any ability is used by spending action points. The more action points an ability spends, the cheaper it will be in experience points..
        /// </summary>
        public static string ActionPointAspectHint {
            get {
                return ResourceManager.GetString("ActionPointAspectHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Add {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Edit {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade ability.
        /// </summary>
        public static string AddOrEditAbilityPageTitle_Upgrade {
            get {
                return ResourceManager.GetString("AddOrEditAbilityPageTitle_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add character.
        /// </summary>
        public static string AddOrEditCharacterPageTitle_Add {
            get {
                return ResourceManager.GetString("AddOrEditCharacterPageTitle_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit character.
        /// </summary>
        public static string AddOrEditCharacterPageTitle_Edit {
            get {
                return ResourceManager.GetString("AddOrEditCharacterPageTitle_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string Appearance {
            get {
                return ResourceManager.GetString("Appearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area.
        /// </summary>
        public static string Area {
            get {
                return ResourceManager.GetString("Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action points.
        /// </summary>
        public static string AspectActionPoints {
            get {
                return ResourceManager.GetString("AspectActionPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles.
        /// </summary>
        public static string AspectObstacle {
            get {
                return ResourceManager.GetString("AspectObstacle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aspects.
        /// </summary>
        public static string Aspects {
            get {
                return ResourceManager.GetString("Aspects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target chain.
        /// </summary>
        public static string AspectTargetChain {
            get {
                return ResourceManager.GetString("AspectTargetChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection.
        /// </summary>
        public static string AspectTargetSelection {
            get {
                return ResourceManager.GetString("AspectTargetSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average:.
        /// </summary>
        public static string Average {
            get {
                return ResourceManager.GetString("Average", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backstory.
        /// </summary>
        public static string Backstory {
            get {
                return ResourceManager.GetString("Backstory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brick wall.
        /// </summary>
        public static string BrickWall {
            get {
                return ResourceManager.GetString("BrickWall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse....
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change language.
        /// </summary>
        public static string ChangeLanguage {
            get {
                return ResourceManager.GetString("ChangeLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string Character {
            get {
                return ResourceManager.GetString("Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string CharacterAbilitiesPageTitle {
            get {
                return ResourceManager.GetString("CharacterAbilitiesPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character list.
        /// </summary>
        public static string CharacterListPageTitle {
            get {
                return ResourceManager.GetString("CharacterListPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string CharacterTab {
            get {
                return ResourceManager.GetString("CharacterTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities.
        /// </summary>
        public static string CharacterTabAbilities {
            get {
                return ResourceManager.GetString("CharacterTabAbilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string CharacterTabDetails {
            get {
                return ResourceManager.GetString("CharacterTabDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory.
        /// </summary>
        public static string CharacterTabInventory {
            get {
                return ResourceManager.GetString("CharacterTabInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap to select, swipe right to edit and swipe left to delete..
        /// </summary>
        public static string CharListHelpText {
            get {
                return ResourceManager.GetString("CharListHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the language.
        /// </summary>
        public static string ChooseLanguage {
            get {
                return ResourceManager.GetString("ChooseLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new character.
        /// </summary>
        public static string CreateNewCharacter {
            get {
                return ResourceManager.GetString("CreateNewCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string CurrentCharacterPageTitle {
            get {
                return ResourceManager.GetString("CurrentCharacterPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current language.
        /// </summary>
        public static string CurrentLanguage {
            get {
                return ResourceManager.GetString("CurrentLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        public static string Damage {
            get {
                return ResourceManager.GetString("Damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current (+0%).
        /// </summary>
        public static string DamageEffectCurrentAdjustment {
            get {
                return ResourceManager.GetString("DamageEffectCurrentAdjustment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is the set of dice or value you should use to decide how much damage your ability dealt..
        /// </summary>
        public static string DamageEffectPageHint {
            get {
                return ResourceManager.GetString("DamageEffectPageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the ability?.
        /// </summary>
        public static string DeleteAbilityQuestion {
            get {
                return ResourceManager.GetString("DeleteAbilityQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the character?.
        /// </summary>
        public static string DeleteCharacterQuestion {
            get {
                return ResourceManager.GetString("DeleteCharacterQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the effect?.
        /// </summary>
        public static string DeleteEffectQuestion {
            get {
                return ResourceManager.GetString("DeleteEffectQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dense vegetation.
        /// </summary>
        public static string DenseVegetation {
            get {
                return ResourceManager.GetString("DenseVegetation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the value in the format commonly used for dice formulas. For example, 3d6 + 2d4 + 5. In such formulas, the number before «d» means the number of dice, the number after «d» - the number of faces on the dice of this type. You can use custom dice like d11 or d19 if you like..
        /// </summary>
        public static string DiceValuePopupHint {
            get {
                return ResourceManager.GetString("DiceValuePopupHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dice formula.
        /// </summary>
        public static string DiceValuePopupPlaceholder {
            get {
                return ResourceManager.GetString("DiceValuePopupPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dice value.
        /// </summary>
        public static string DiceValuePopupTitle {
            get {
                return ResourceManager.GetString("DiceValuePopupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        public static string EffectDamage {
            get {
                return ResourceManager.GetString("EffectDamage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heal.
        /// </summary>
        public static string EffectHeal {
            get {
                return ResourceManager.GetString("EffectHeal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects.
        /// </summary>
        public static string Effects {
            get {
                return ResourceManager.GetString("Effects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXP.
        /// </summary>
        public static string EXP {
            get {
                return ResourceManager.GetString("EXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience.
        /// </summary>
        public static string Experience {
            get {
                return ResourceManager.GetString("Experience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXP to level up.
        /// </summary>
        public static string ExperienceToLevelup {
            get {
                return ResourceManager.GetString("ExperienceToLevelup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast adjustment.
        /// </summary>
        public static string FastAdjustment {
            get {
                return ResourceManager.GetString("FastAdjustment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free EXP.
        /// </summary>
        public static string FreeExperience {
            get {
                return ResourceManager.GetString("FreeExperience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health.
        /// </summary>
        public static string Health {
            get {
                return ResourceManager.GetString("Health", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok, hide message.
        /// </summary>
        public static string HideTooltip {
            get {
                return ResourceManager.GetString("HideTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leather armor.
        /// </summary>
        public static string LeatherArmor {
            get {
                return ResourceManager.GetString("LeatherArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level {0}.
        /// </summary>
        public static string LevelFormat {
            get {
                return ResourceManager.GetString("LevelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        public static string Login {
            get {
                return ResourceManager.GetString("Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metal armor.
        /// </summary>
        public static string MetalArmor {
            get {
                return ResourceManager.GetString("MetalArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some very powerful obstacle.
        /// </summary>
        public static string MuchMorePowerfullObstacle {
            get {
                return ResourceManager.GetString("MuchMorePowerfullObstacle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to n/a.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles between targets.
        /// </summary>
        public static string ObstacleBetweenTargetsInChain {
            get {
                return ResourceManager.GetString("ObstacleBetweenTargetsInChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacle equivalent.
        /// </summary>
        public static string ObstacleEquivalent {
            get {
                return ResourceManager.GetString("ObstacleEquivalent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obstacles.
        /// </summary>
        public static string Obstacles {
            get {
                return ResourceManager.GetString("Obstacles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paper sheet.
        /// </summary>
        public static string PaperSheet {
            get {
                return ResourceManager.GetString("PaperSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks like you haven&apos;t created any character yet. It is a good reason to create one. Fortunately, there is a button at the bottom of this page specifically for such cases..
        /// </summary>
        public static string PlayerHaveNoCharacter {
            get {
                return ResourceManager.GetString("PlayerHaveNoCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing....
        /// </summary>
        public static string PlayerHaveNoCharacterTitle {
            get {
                return ResourceManager.GetString("PlayerHaveNoCharacterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portrait.
        /// </summary>
        public static string Portrait {
            get {
                return ResourceManager.GetString("Portrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the «Browse» button and select a character image. You can customize the portrait by zooming in, zooming out and moving the image in the window below..
        /// </summary>
        public static string PortraitHint {
            get {
                return ResourceManager.GetString("PortraitHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portrait settings.
        /// </summary>
        public static string PortraitSettings {
            get {
                return ResourceManager.GetString("PortraitSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember me.
        /// </summary>
        public static string RememberMe {
            get {
                return ResourceManager.GetString("RememberMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select character image.
        /// </summary>
        public static string SelectCharacterPortrait {
            get {
                return ResourceManager.GetString("SelectCharacterPortrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select language.
        /// </summary>
        public static string SelectLanguagePageTitle {
            get {
                return ResourceManager.GetString("SelectLanguagePageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string Set {
            get {
                return ResourceManager.GetString("Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsPageTitle {
            get {
                return ResourceManager.GetString("SettingsPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign In.
        /// </summary>
        public static string SignIn {
            get {
                return ResourceManager.GetString("SignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go.
        /// </summary>
        public static string SignInButton {
            get {
                return ResourceManager.GetString("SignInButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign In.
        /// </summary>
        public static string SignInPageTitle {
            get {
                return ResourceManager.GetString("SignInPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread:.
        /// </summary>
        public static string Spread {
            get {
                return ResourceManager.GetString("Spread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strategy.
        /// </summary>
        public static string Strategy {
            get {
                return ResourceManager.GetString("Strategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ability cost:.
        /// </summary>
        public static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch.
        /// </summary>
        public static string Switch {
            get {
                return ResourceManager.GetString("Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        public static string Tags {
            get {
                return ResourceManager.GetString("Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable target chain.
        /// </summary>
        public static string TargetChainEnable {
            get {
                return ResourceManager.GetString("TargetChainEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets can form chains. This means that once an effect is applied to a target, it can also be applied to the next target at a given distance from the previous one, and so on. The effect can only be applied once to each target within the chain. The distance is indicated in meters. The maximum number of targets in a chain and the distance between targets is limited. The character himself chooses the order of the targets in the chain..
        /// </summary>
        public static string TargetChainHint {
            get {
                return ResourceManager.GetString("TargetChainHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max count of targets.
        /// </summary>
        public static string TargetChainMaxCount {
            get {
                return ResourceManager.GetString("TargetChainMaxCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max distance between targets.
        /// </summary>
        public static string TargetChainMaxDistance {
            get {
                return ResourceManager.GetString("TargetChainMaxDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied to the next target in the chain if there is an obstacle with the indicated durability equivalent or stronger between it and the previous target..
        /// </summary>
        public static string TargetChainObstacleHint {
            get {
                return ResourceManager.GetString("TargetChainObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length (A).
        /// </summary>
        public static string TargetSelectionAreaA {
            get {
                return ResourceManager.GetString("TargetSelectionAreaA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width (B).
        /// </summary>
        public static string TargetSelectionAreaB {
            get {
                return ResourceManager.GetString("TargetSelectionAreaB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (C).
        /// </summary>
        public static string TargetSelectionAreaC {
            get {
                return ResourceManager.GetString("TargetSelectionAreaC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height (H).
        /// </summary>
        public static string TargetSelectionAreaH {
            get {
                return ResourceManager.GetString("TargetSelectionAreaH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of voxels (N).
        /// </summary>
        public static string TargetSelectionAreaN {
            get {
                return ResourceManager.GetString("TargetSelectionAreaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Between character and area.
        /// </summary>
        public static string TargetSelectionAreaObstacleCharacterAndArea {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleCharacterAndArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied if there is an obstacle equal to or stronger than the selected equivalent in strength between the character and the nearest point of the area of ​​effect. Also, the effect cannot be applied to the target if there is an obstacle between it and the epicenter of the area of ​​effect that is equal in strength to the equivalent or stronger than it. The strength for these two types of obstacles is configured separately..
        /// </summary>
        public static string TargetSelectionAreaObstacleHint {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Between target and epicenter.
        /// </summary>
        public static string TargetSelectionAreaObstacleTargetAndEpicenter {
            get {
                return ResourceManager.GetString("TargetSelectionAreaObstacleTargetAndEpicenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radius (R).
        /// </summary>
        public static string TargetSelectionAreaR {
            get {
                return ResourceManager.GetString("TargetSelectionAreaR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excluded targets count.
        /// </summary>
        public static string TargetSelectionEcludeTargetsField {
            get {
                return ResourceManager.GetString("TargetSelectionEcludeTargetsField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is possible to fine-tune the area so that certain targets in the area selected by the character will not be affected. The more such targets a character can exclude, the more expensive the ability..
        /// </summary>
        public static string TargetSelectionEcludeTargetsHint {
            get {
                return ResourceManager.GetString("TargetSelectionEcludeTargetsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude targets.
        /// </summary>
        public static string TargetSelectionExcludeTargets {
            get {
                return ResourceManager.GetString("TargetSelectionExcludeTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random target selection.
        /// </summary>
        public static string TargetSelectionIsRandom {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target selection is random.
        /// </summary>
        public static string TargetSelectionIsRandomCheckBox {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandomCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the random target selection mode is selected, then the player, when using the ability, will have to select a random target from those that satisfy the other conditions. This will complicate the planning of actions, but it will make the ability cheaper..
        /// </summary>
        public static string TargetSelectionIsRandomHint {
            get {
                return ResourceManager.GetString("TargetSelectionIsRandomHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect cannot be applied to the target if there is an obstacle equal to or stronger than the equivalent durability between it and the character..
        /// </summary>
        public static string TargetSelectionNTADObstacleHint {
            get {
                return ResourceManager.GetString("TargetSelectionNTADObstacleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All targets in area.
        /// </summary>
        public static string TargetSelectionStratedyArea {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance to area in meters (D).
        /// </summary>
        public static string TargetSelectionStratedyAreaDistance {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyAreaDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to targets located in the specified area. All area parameters are specified in meters. An area can be placed at any angle relative to the character, and the area distance is the distance from the character to the nearest point in that area..
        /// </summary>
        public static string TargetSelectionStratedyAreaHint {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyAreaHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple targets in the distance.
        /// </summary>
        public static string TargetSelectionStratedyNTAD {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of targets.
        /// </summary>
        public static string TargetSelectionStratedyNTADCount {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance in meters.
        /// </summary>
        public static string TargetSelectionStratedyNTADDistance {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this strategy, the effect is applied to a limited number of targets that are no further than the set range..
        /// </summary>
        public static string TargetSelectionStratedyNTADHint {
            get {
                return ResourceManager.GetString("TargetSelectionStratedyNTADHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is necessary to choose a target selection strategy, there are only two of them:.
        /// </summary>
        public static string TargetSelectionStrategyHint {
            get {
                return ResourceManager.GetString("TargetSelectionStrategyHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A voxel is a 1x1 meter cube. From such voxels, you can make an array — the figure of the area in which the effect will be applied to the targets. In the picture an area of ​​five voxels is composed as an example..
        /// </summary>
        public static string TargetSelectionVoxelHint {
            get {
                return ResourceManager.GetString("TargetSelectionVoxelHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thick steel plate.
        /// </summary>
        public static string ThickSteelPlate {
            get {
                return ResourceManager.GetString("ThickSteelPlate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wooden plank.
        /// </summary>
        public static string WoodenPlank {
            get {
                return ResourceManager.GetString("WoodenPlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
